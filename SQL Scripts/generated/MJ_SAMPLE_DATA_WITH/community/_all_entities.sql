-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Authors
-- Item: spCreateAuthor
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Author
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [community].[spCreateAuthor]
GO

CREATE PROCEDURE [community].[spCreateAuthor]
    @CompanyID int,
    @Email nvarchar(255),
    @FirstName nvarchar(50),
    @LastName nvarchar(50),
    @JobTitle nvarchar(100),
    @Address nvarchar(255),
    @City nvarchar(100),
    @State nvarchar(100),
    @ZipCode nvarchar(20),
    @Country nvarchar(100)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [community].[Author]
        (
            [CompanyID],
            [Email],
            [FirstName],
            [LastName],
            [JobTitle],
            [Address],
            [City],
            [State],
            [ZipCode],
            [Country]
        )
    VALUES
        (
            @CompanyID,
            @Email,
            @FirstName,
            @LastName,
            @JobTitle,
            @Address,
            @City,
            @State,
            @ZipCode,
            @Country
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [community].[vwAuthors] WHERE [AuthorID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [community].[spCreateAuthor] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Companies__community
-- Item: spCreateCompany__community
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Company
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [community].[spCreateCompany__community]
GO

CREATE PROCEDURE [community].[spCreateCompany__community]
    @CompanyName nvarchar(255),
    @Website nvarchar(255),
    @Industry nvarchar(100),
    @Size nvarchar(50),
    @Address nvarchar(255),
    @City nvarchar(100),
    @State nvarchar(100),
    @ZipCode nvarchar(20),
    @Country nvarchar(100)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [community].[Company]
        (
            [CompanyName],
            [Website],
            [Industry],
            [Size],
            [Address],
            [City],
            [State],
            [ZipCode],
            [Country]
        )
    VALUES
        (
            @CompanyName,
            @Website,
            @Industry,
            @Size,
            @Address,
            @City,
            @State,
            @ZipCode,
            @Country
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [community].[vwCompanies__community] WHERE [CompanyID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [community].[spCreateCompany__community] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Forums
-- Item: spCreateForum
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Forum
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [community].[spCreateForum]
GO

CREATE PROCEDURE [community].[spCreateForum]
    @Title nvarchar(255),
    @Description nvarchar(MAX),
    @CreationDate date
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [community].[Forum]
        (
            [Title],
            [Description],
            [CreationDate]
        )
    VALUES
        (
            @Title,
            @Description,
            @CreationDate
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [community].[vwForums] WHERE [ForumID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [community].[spCreateForum] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Posts
-- Item: spCreatePost
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Post
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [community].[spCreatePost]
GO

CREATE PROCEDURE [community].[spCreatePost]
    @ForumID int,
    @AuthorID int,
    @PostContent nvarchar(MAX),
    @PostDate date
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [community].[Post]
        (
            [ForumID],
            [AuthorID],
            [PostContent],
            [PostDate]
        )
    VALUES
        (
            @ForumID,
            @AuthorID,
            @PostContent,
            @PostDate
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [community].[vwPosts] WHERE [PostID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [community].[spCreatePost] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Replies
-- Item: spCreateReply
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Reply
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [community].[spCreateReply]
GO

CREATE PROCEDURE [community].[spCreateReply]
    @PostID int,
    @AuthorID int,
    @ReplyContent nvarchar(MAX),
    @ReplyDate date
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [community].[Reply]
        (
            [PostID],
            [AuthorID],
            [ReplyContent],
            [ReplyDate]
        )
    VALUES
        (
            @PostID,
            @AuthorID,
            @ReplyContent,
            @ReplyDate
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [community].[vwReplies] WHERE [ReplyID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [community].[spCreateReply] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Authors
-- Item: spUpdateAuthor
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Author  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [community].[spUpdateAuthor]
GO

CREATE PROCEDURE [community].[spUpdateAuthor]
    @AuthorID int,
    @CompanyID int,
    @Email nvarchar(255),
    @FirstName nvarchar(50),
    @LastName nvarchar(50),
    @JobTitle nvarchar(100),
    @Address nvarchar(255),
    @City nvarchar(100),
    @State nvarchar(100),
    @ZipCode nvarchar(20),
    @Country nvarchar(100)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [community].[Author]
    SET 
        [CompanyID] = @CompanyID,
        [Email] = @Email,
        [FirstName] = @FirstName,
        [LastName] = @LastName,
        [JobTitle] = @JobTitle,
        [Address] = @Address,
        [City] = @City,
        [State] = @State,
        [ZipCode] = @ZipCode,
        [Country] = @Country
    WHERE 
        [AuthorID] = @AuthorID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [community].[vwAuthors] WHERE [AuthorID] = @AuthorID
END
GO
GRANT EXECUTE ON [community].[spUpdateAuthor] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Companies__community
-- Item: spUpdateCompany__community
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Company  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [community].[spUpdateCompany__community]
GO

CREATE PROCEDURE [community].[spUpdateCompany__community]
    @CompanyID int,
    @CompanyName nvarchar(255),
    @Website nvarchar(255),
    @Industry nvarchar(100),
    @Size nvarchar(50),
    @Address nvarchar(255),
    @City nvarchar(100),
    @State nvarchar(100),
    @ZipCode nvarchar(20),
    @Country nvarchar(100)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [community].[Company]
    SET 
        [CompanyName] = @CompanyName,
        [Website] = @Website,
        [Industry] = @Industry,
        [Size] = @Size,
        [Address] = @Address,
        [City] = @City,
        [State] = @State,
        [ZipCode] = @ZipCode,
        [Country] = @Country
    WHERE 
        [CompanyID] = @CompanyID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [community].[vwCompanies__community] WHERE [CompanyID] = @CompanyID
END
GO
GRANT EXECUTE ON [community].[spUpdateCompany__community] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Forums
-- Item: spUpdateForum
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Forum  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [community].[spUpdateForum]
GO

CREATE PROCEDURE [community].[spUpdateForum]
    @ForumID int,
    @Title nvarchar(255),
    @Description nvarchar(MAX),
    @CreationDate date
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [community].[Forum]
    SET 
        [Title] = @Title,
        [Description] = @Description,
        [CreationDate] = @CreationDate
    WHERE 
        [ForumID] = @ForumID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [community].[vwForums] WHERE [ForumID] = @ForumID
END
GO
GRANT EXECUTE ON [community].[spUpdateForum] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Posts
-- Item: spUpdatePost
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Post  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [community].[spUpdatePost]
GO

CREATE PROCEDURE [community].[spUpdatePost]
    @PostID int,
    @ForumID int,
    @AuthorID int,
    @PostContent nvarchar(MAX),
    @PostDate date
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [community].[Post]
    SET 
        [ForumID] = @ForumID,
        [AuthorID] = @AuthorID,
        [PostContent] = @PostContent,
        [PostDate] = @PostDate
    WHERE 
        [PostID] = @PostID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [community].[vwPosts] WHERE [PostID] = @PostID
END
GO
GRANT EXECUTE ON [community].[spUpdatePost] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Replies
-- Item: spUpdateReply
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Reply  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [community].[spUpdateReply]
GO

CREATE PROCEDURE [community].[spUpdateReply]
    @ReplyID int,
    @PostID int,
    @AuthorID int,
    @ReplyContent nvarchar(MAX),
    @ReplyDate date
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [community].[Reply]
    SET 
        [PostID] = @PostID,
        [AuthorID] = @AuthorID,
        [ReplyContent] = @ReplyContent,
        [ReplyDate] = @ReplyDate
    WHERE 
        [ReplyID] = @ReplyID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [community].[vwReplies] WHERE [ReplyID] = @ReplyID
END
GO
GRANT EXECUTE ON [community].[spUpdateReply] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Authors
-- Item: vwAuthors
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Authors
-----               SCHEMA:      community
-----               BASE TABLE:  Author
-----               PRIMARY KEY: AuthorID
------------------------------------------------------------
DROP VIEW IF EXISTS [community].[vwAuthors]
GO

CREATE VIEW [community].[vwAuthors]
AS
SELECT 
    a.*
FROM
    [community].[Author] AS a
GO
GRANT SELECT ON [community].[vwAuthors] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Companies__community
-- Item: vwCompanies__community
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Companies__community
-----               SCHEMA:      community
-----               BASE TABLE:  Company
-----               PRIMARY KEY: CompanyID
------------------------------------------------------------
DROP VIEW IF EXISTS [community].[vwCompanies__community]
GO

CREATE VIEW [community].[vwCompanies__community]
AS
SELECT 
    c.*
FROM
    [community].[Company] AS c
GO
GRANT SELECT ON [community].[vwCompanies__community] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Forums
-- Item: vwForums
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Forums
-----               SCHEMA:      community
-----               BASE TABLE:  Forum
-----               PRIMARY KEY: ForumID
------------------------------------------------------------
DROP VIEW IF EXISTS [community].[vwForums]
GO

CREATE VIEW [community].[vwForums]
AS
SELECT 
    f.*
FROM
    [community].[Forum] AS f
GO
GRANT SELECT ON [community].[vwForums] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Posts
-- Item: vwPosts
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Posts
-----               SCHEMA:      community
-----               BASE TABLE:  Post
-----               PRIMARY KEY: PostID
------------------------------------------------------------
DROP VIEW IF EXISTS [community].[vwPosts]
GO

CREATE VIEW [community].[vwPosts]
AS
SELECT 
    p.*
FROM
    [community].[Post] AS p
GO
GRANT SELECT ON [community].[vwPosts] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Replies
-- Item: vwReplies
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Replies
-----               SCHEMA:      community
-----               BASE TABLE:  Reply
-----               PRIMARY KEY: ReplyID
------------------------------------------------------------
DROP VIEW IF EXISTS [community].[vwReplies]
GO

CREATE VIEW [community].[vwReplies]
AS
SELECT 
    r.*
FROM
    [community].[Reply] AS r
GO
GRANT SELECT ON [community].[vwReplies] TO [cdp_UI], [cdp_Developer], [cdp_Integration]




GRANT EXECUTE ON [community].[spCreateAuthor] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [community].[spCreateCompany__community] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [community].[spCreateForum] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [community].[spCreatePost] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [community].[spCreateReply] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [community].[spUpdateAuthor] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [community].[spUpdateCompany__community] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [community].[spUpdateForum] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [community].[spUpdatePost] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [community].[spUpdateReply] TO [cdp_Developer], [cdp_Integration]




-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Authors
-- Item: Permissions for vwAuthors
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [community].[vwAuthors] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Companies__community
-- Item: Permissions for vwCompanies__community
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [community].[vwCompanies__community] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Forums
-- Item: Permissions for vwForums
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [community].[vwForums] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Posts
-- Item: Permissions for vwPosts
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [community].[vwPosts] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Replies
-- Item: Permissions for vwReplies
-- Generated: 4/5/2024, 6:36:50 PM
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [community].[vwReplies] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


