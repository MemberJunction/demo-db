-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Application Entities
-- Item: spCreateApplicationEntity
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR ApplicationEntity
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateApplicationEntity]
GO

CREATE PROCEDURE [__mj].[spCreateApplicationEntity]
    @ApplicationName nvarchar(50),
    @EntityID int,
    @Sequence int,
    @DefaultForNewUser bit
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[ApplicationEntity]
        (
            [ApplicationName],
            [EntityID],
            [Sequence],
            [DefaultForNewUser]
        )
    VALUES
        (
            @ApplicationName,
            @EntityID,
            @Sequence,
            @DefaultForNewUser
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwApplicationEntities] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateApplicationEntity] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Audit Logs
-- Item: spCreateAuditLog
-- Generated: 3/10/2024, 9:38:16 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR AuditLog
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateAuditLog]
GO

CREATE PROCEDURE [__mj].[spCreateAuditLog]
    @AuditLogTypeName nvarchar(50),
    @UserID int,
    @AuthorizationName nvarchar(100),
    @Status nvarchar(50),
    @Description nvarchar(MAX),
    @Details nvarchar(MAX),
    @EntityID int,
    @RecordID nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[AuditLog]
        (
            [AuditLogTypeName],
            [UserID],
            [AuthorizationName],
            [Status],
            [Description],
            [Details],
            [EntityID],
            [RecordID]
        )
    VALUES
        (
            @AuditLogTypeName,
            @UserID,
            @AuthorizationName,
            @Status,
            @Description,
            @Details,
            @EntityID,
            @RecordID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwAuditLogs] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateAuditLog] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Companies
-- Item: spCreateCompany
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Company
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateCompany]
GO

CREATE PROCEDURE [__mj].[spCreateCompany]
    @Name nvarchar(50),
    @Description nvarchar(200),
    @Website nvarchar(100),
    @LogoURL nvarchar(500),
    @Domain nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[Company]
        (
            [Name],
            [Description],
            [Website],
            [LogoURL],
            [Domain]
        )
    VALUES
        (
            @Name,
            @Description,
            @Website,
            @LogoURL,
            @Domain
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwCompanies] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateCompany] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Record Maps
-- Item: spCreateCompanyIntegrationRecordMap
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR CompanyIntegrationRecordMap
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateCompanyIntegrationRecordMap]
GO

CREATE PROCEDURE [__mj].[spCreateCompanyIntegrationRecordMap]
    @CompanyIntegrationID int,
    @ExternalSystemRecordID nvarchar(100),
    @EntityID int,
    @EntityRecordID nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[CompanyIntegrationRecordMap]
        (
            [CompanyIntegrationID],
            [ExternalSystemRecordID],
            [EntityID],
            [EntityRecordID]
        )
    VALUES
        (
            @CompanyIntegrationID,
            @ExternalSystemRecordID,
            @EntityID,
            @EntityRecordID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwCompanyIntegrationRecordMaps] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateCompanyIntegrationRecordMap] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Conversations
-- Item: spCreateConversation
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Conversation
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateConversation]
GO

CREATE PROCEDURE [__mj].[spCreateConversation]
    @UserID int,
    @ExternalID nvarchar(100),
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @Type nvarchar(50),
    @IsArchived bit,
    @LinkedEntityID int,
    @LinkedRecordID int,
    @DataContextID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[Conversation]
        (
            [UserID],
            [ExternalID],
            [Name],
            [Description],
            [Type],
            [IsArchived],
            [LinkedEntityID],
            [LinkedRecordID],
            [DataContextID]
        )
    VALUES
        (
            @UserID,
            @ExternalID,
            @Name,
            @Description,
            @Type,
            @IsArchived,
            @LinkedEntityID,
            @LinkedRecordID,
            @DataContextID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwConversations] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateConversation] TO [cdp_UI], [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Conversation Details
-- Item: spCreateConversationDetail
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR ConversationDetail
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateConversationDetail]
GO

CREATE PROCEDURE [__mj].[spCreateConversationDetail]
    @ConversationID int,
    @ExternalID nvarchar(100),
    @Role nvarchar(20),
    @Message nvarchar(MAX),
    @Error nvarchar(MAX),
    @HiddenToUser bit
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[ConversationDetail]
        (
            [ConversationID],
            [ExternalID],
            [Role],
            [Message],
            [Error],
            [HiddenToUser]
        )
    VALUES
        (
            @ConversationID,
            @ExternalID,
            @Role,
            @Message,
            @Error,
            @HiddenToUser
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwConversationDetails] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateConversationDetail] TO [cdp_UI], [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dashboards
-- Item: spCreateDashboard
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Dashboard
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateDashboard]
GO

CREATE PROCEDURE [__mj].[spCreateDashboard]
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @CategoryID int,
    @UIConfigDetails nvarchar(MAX),
    @UserID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[Dashboard]
        (
            [Name],
            [Description],
            [CategoryID],
            [UIConfigDetails],
            [UserID]
        )
    VALUES
        (
            @Name,
            @Description,
            @CategoryID,
            @UIConfigDetails,
            @UserID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwDashboards] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateDashboard] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dashboard Categories
-- Item: spCreateDashboardCategory
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR DashboardCategory
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateDashboardCategory]
GO

CREATE PROCEDURE [__mj].[spCreateDashboardCategory]
    @ID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @ParentID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[DashboardCategory]
        (
            [Name],
            [Description],
            [ParentID]
        )
    VALUES
        (
            @Name,
            @Description,
            @ParentID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwDashboardCategories] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spCreateDashboardCategory] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Data Contexts
-- Item: spCreateDataContext
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR DataContext
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateDataContext]
GO

CREATE PROCEDURE [__mj].[spCreateDataContext]
    @Name nvarchar(255),
    @UserID int,
    @Description nvarchar(MAX),
    @LastRefreshedAt datetime
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[DataContext]
        (
            [Name],
            [UserID],
            [Description],
            [LastRefreshedAt]
        )
    VALUES
        (
            @Name,
            @UserID,
            @Description,
            @LastRefreshedAt
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwDataContexts] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateDataContext] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Data Context Items
-- Item: spCreateDataContextItem
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR DataContextItem
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateDataContextItem]
GO

CREATE PROCEDURE [__mj].[spCreateDataContextItem]
    @DataContextID int,
    @Type nvarchar(50),
    @ViewID int,
    @QueryID int,
    @EntityID int,
    @RecordID nvarchar(255),
    @SQL nvarchar(MAX),
    @DataJSON nvarchar(MAX),
    @LastRefreshedAt datetime
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[DataContextItem]
        (
            [DataContextID],
            [Type],
            [ViewID],
            [QueryID],
            [EntityID],
            [RecordID],
            [SQL],
            [DataJSON],
            [LastRefreshedAt]
        )
    VALUES
        (
            @DataContextID,
            @Type,
            @ViewID,
            @QueryID,
            @EntityID,
            @RecordID,
            @SQL,
            @DataJSON,
            @LastRefreshedAt
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwDataContextItems] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateDataContextItem] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employees
-- Item: spCreateEmployee
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Employee
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateEmployee]
GO

CREATE PROCEDURE [__mj].[spCreateEmployee]
    @FirstName nvarchar(30),
    @LastName nvarchar(50),
    @Title nvarchar(50),
    @Email nvarchar(100),
    @Phone nvarchar(20),
    @Active bit,
    @CompanyID int,
    @SupervisorID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[Employee]
        (
            [FirstName],
            [LastName],
            [Title],
            [Email],
            [Phone],
            [Active],
            [CompanyID],
            [SupervisorID]
        )
    VALUES
        (
            @FirstName,
            @LastName,
            @Title,
            @Email,
            @Phone,
            @Active,
            @CompanyID,
            @SupervisorID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwEmployees] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateEmployee] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entities
-- Item: spCreateEntity
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Entity
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateEntity]
GO

CREATE PROCEDURE [__mj].[spCreateEntity]
    @ID int,
    @ParentID int,
    @Name nvarchar(255),
    @NameSuffix nvarchar(255),
    @Description nvarchar(MAX),
    @AutoUpdateDescription bit,
    @BaseView nvarchar(255),
    @BaseViewGenerated bit,
    @VirtualEntity bit,
    @TrackRecordChanges bit,
    @AuditRecordAccess bit,
    @AuditViewRuns bit,
    @IncludeInAPI bit,
    @AllowAllRowsAPI bit,
    @AllowUpdateAPI bit,
    @AllowCreateAPI bit,
    @AllowDeleteAPI bit,
    @CustomResolverAPI bit,
    @AllowUserSearchAPI bit,
    @FullTextSearchEnabled bit,
    @FullTextCatalog nvarchar(255),
    @FullTextCatalogGenerated bit,
    @FullTextIndex nvarchar(255),
    @FullTextIndexGenerated bit,
    @FullTextSearchFunction nvarchar(255),
    @FullTextSearchFunctionGenerated bit,
    @UserViewMaxRows int,
    @spCreate nvarchar(255),
    @spUpdate nvarchar(255),
    @spDelete nvarchar(255),
    @spCreateGenerated bit,
    @spUpdateGenerated bit,
    @spDeleteGenerated bit,
    @CascadeDeletes bit,
    @UserFormGenerated bit,
    @EntityObjectSubclassName nvarchar(255),
    @EntityObjectSubclassImport nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[Entity]
        (
            [ParentID],
            [Name],
            [NameSuffix],
            [Description],
            [AutoUpdateDescription],
            [BaseView],
            [BaseViewGenerated],
            [VirtualEntity],
            [TrackRecordChanges],
            [AuditRecordAccess],
            [AuditViewRuns],
            [IncludeInAPI],
            [AllowAllRowsAPI],
            [AllowUpdateAPI],
            [AllowCreateAPI],
            [AllowDeleteAPI],
            [CustomResolverAPI],
            [AllowUserSearchAPI],
            [FullTextSearchEnabled],
            [FullTextCatalog],
            [FullTextCatalogGenerated],
            [FullTextIndex],
            [FullTextIndexGenerated],
            [FullTextSearchFunction],
            [FullTextSearchFunctionGenerated],
            [UserViewMaxRows],
            [spCreate],
            [spUpdate],
            [spDelete],
            [spCreateGenerated],
            [spUpdateGenerated],
            [spDeleteGenerated],
            [CascadeDeletes],
            [UserFormGenerated],
            [EntityObjectSubclassName],
            [EntityObjectSubclassImport]
        )
    VALUES
        (
            @ParentID,
            @Name,
            @NameSuffix,
            @Description,
            @AutoUpdateDescription,
            @BaseView,
            @BaseViewGenerated,
            @VirtualEntity,
            @TrackRecordChanges,
            @AuditRecordAccess,
            @AuditViewRuns,
            @IncludeInAPI,
            @AllowAllRowsAPI,
            @AllowUpdateAPI,
            @AllowCreateAPI,
            @AllowDeleteAPI,
            @CustomResolverAPI,
            @AllowUserSearchAPI,
            @FullTextSearchEnabled,
            @FullTextCatalog,
            @FullTextCatalogGenerated,
            @FullTextIndex,
            @FullTextIndexGenerated,
            @FullTextSearchFunction,
            @FullTextSearchFunctionGenerated,
            @UserViewMaxRows,
            @spCreate,
            @spUpdate,
            @spDelete,
            @spCreateGenerated,
            @spUpdateGenerated,
            @spDeleteGenerated,
            @CascadeDeletes,
            @UserFormGenerated,
            @EntityObjectSubclassName,
            @EntityObjectSubclassImport
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwEntities] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spCreateEntity] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Documents
-- Item: spCreateEntityDocument
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR EntityDocument
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateEntityDocument]
GO

CREATE PROCEDURE [__mj].[spCreateEntityDocument]
    @Name nvarchar(250),
    @EntityID int,
    @TypeID int,
    @Status nvarchar(15),
    @Template nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[EntityDocument]
        (
            [Name],
            [EntityID],
            [TypeID],
            [Status],
            [Template]
        )
    VALUES
        (
            @Name,
            @EntityID,
            @TypeID,
            @Status,
            @Template
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwEntityDocuments] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateEntityDocument] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Document Runs
-- Item: spCreateEntityDocumentRun
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR EntityDocumentRun
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateEntityDocumentRun]
GO

CREATE PROCEDURE [__mj].[spCreateEntityDocumentRun]
    @EntityDocumentID int,
    @StartedAt datetime,
    @EndedAt datetime,
    @Status nvarchar(15)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[EntityDocumentRun]
        (
            [EntityDocumentID],
            [StartedAt],
            [EndedAt],
            [Status]
        )
    VALUES
        (
            @EntityDocumentID,
            @StartedAt,
            @EndedAt,
            @Status
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwEntityDocumentRuns] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateEntityDocumentRun] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Document Types
-- Item: spCreateEntityDocumentType
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR EntityDocumentType
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateEntityDocumentType]
GO

CREATE PROCEDURE [__mj].[spCreateEntityDocumentType]
    @Name nvarchar(100),
    @Description nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[EntityDocumentType]
        (
            [Name],
            [Description]
        )
    VALUES
        (
            @Name,
            @Description
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwEntityDocumentTypes] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateEntityDocumentType] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Fields
-- Item: spCreateEntityField
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR EntityField
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateEntityField]
GO

CREATE PROCEDURE [__mj].[spCreateEntityField]
    @DisplayName nvarchar(255),
    @Description nvarchar(MAX),
    @AutoUpdateDescription bit,
    @IsPrimaryKey bit,
    @IsUnique bit,
    @Category nvarchar(255),
    @ValueListType nvarchar(20),
    @ExtendedType nvarchar(50),
    @DefaultInView bit,
    @ViewCellTemplate nvarchar(MAX),
    @DefaultColumnWidth int,
    @AllowUpdateAPI bit,
    @AllowUpdateInView bit,
    @IncludeInUserSearchAPI bit,
    @FullTextSearchEnabled bit,
    @UserSearchParamFormatAPI nvarchar(500),
    @IncludeInGeneratedForm bit,
    @GeneratedFormSection nvarchar(10),
    @IsNameField bit,
    @RelatedEntityID int,
    @RelatedEntityFieldName nvarchar(255),
    @IncludeRelatedEntityNameFieldInBaseView bit,
    @RelatedEntityNameFieldMap nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[EntityField]
        (
            [DisplayName],
            [Description],
            [AutoUpdateDescription],
            [IsPrimaryKey],
            [IsUnique],
            [Category],
            [ValueListType],
            [ExtendedType],
            [DefaultInView],
            [ViewCellTemplate],
            [DefaultColumnWidth],
            [AllowUpdateAPI],
            [AllowUpdateInView],
            [IncludeInUserSearchAPI],
            [FullTextSearchEnabled],
            [UserSearchParamFormatAPI],
            [IncludeInGeneratedForm],
            [GeneratedFormSection],
            [IsNameField],
            [RelatedEntityID],
            [RelatedEntityFieldName],
            [IncludeRelatedEntityNameFieldInBaseView],
            [RelatedEntityNameFieldMap]
        )
    VALUES
        (
            @DisplayName,
            @Description,
            @AutoUpdateDescription,
            @IsPrimaryKey,
            @IsUnique,
            @Category,
            @ValueListType,
            @ExtendedType,
            @DefaultInView,
            @ViewCellTemplate,
            @DefaultColumnWidth,
            @AllowUpdateAPI,
            @AllowUpdateInView,
            @IncludeInUserSearchAPI,
            @FullTextSearchEnabled,
            @UserSearchParamFormatAPI,
            @IncludeInGeneratedForm,
            @GeneratedFormSection,
            @IsNameField,
            @RelatedEntityID,
            @RelatedEntityFieldName,
            @IncludeRelatedEntityNameFieldInBaseView,
            @RelatedEntityNameFieldMap
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwEntityFields] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateEntityField] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Permissions
-- Item: spCreateEntityPermission
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR EntityPermission
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateEntityPermission]
GO

CREATE PROCEDURE [__mj].[spCreateEntityPermission]
    @EntityID int,
    @RoleName nvarchar(50),
    @CanCreate bit,
    @CanRead bit,
    @CanUpdate bit,
    @CanDelete bit,
    @ReadRLSFilterID int,
    @CreateRLSFilterID int,
    @UpdateRLSFilterID int,
    @DeleteRLSFilterID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[EntityPermission]
        (
            [EntityID],
            [RoleName],
            [CanCreate],
            [CanRead],
            [CanUpdate],
            [CanDelete],
            [ReadRLSFilterID],
            [CreateRLSFilterID],
            [UpdateRLSFilterID],
            [DeleteRLSFilterID]
        )
    VALUES
        (
            @EntityID,
            @RoleName,
            @CanCreate,
            @CanRead,
            @CanUpdate,
            @CanDelete,
            @ReadRLSFilterID,
            @CreateRLSFilterID,
            @UpdateRLSFilterID,
            @DeleteRLSFilterID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwEntityPermissions] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateEntityPermission] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Record Documents
-- Item: spCreateEntityRecordDocument
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR EntityRecordDocument
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateEntityRecordDocument]
GO

CREATE PROCEDURE [__mj].[spCreateEntityRecordDocument]
    @EntityID int,
    @RecordID nvarchar(255),
    @DocumentText nvarchar(MAX),
    @VectorIndexID int,
    @VectorID nvarchar(50),
    @VectorJSON nvarchar(MAX),
    @EntityRecordUpdatedAt datetime
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[EntityRecordDocument]
        (
            [EntityID],
            [RecordID],
            [DocumentText],
            [VectorIndexID],
            [VectorID],
            [VectorJSON],
            [EntityRecordUpdatedAt]
        )
    VALUES
        (
            @EntityID,
            @RecordID,
            @DocumentText,
            @VectorIndexID,
            @VectorID,
            @VectorJSON,
            @EntityRecordUpdatedAt
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwEntityRecordDocuments] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateEntityRecordDocument] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Relationships
-- Item: spCreateEntityRelationship
-- Generated: 3/10/2024, 9:38:12 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR EntityRelationship
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateEntityRelationship]
GO

CREATE PROCEDURE [__mj].[spCreateEntityRelationship]
    @EntityID int,
    @RelatedEntityID int,
    @BundleInAPI bit,
    @IncludeInParentAllQuery bit,
    @Type nchar(20),
    @EntityKeyField nvarchar(255),
    @RelatedEntityJoinField nvarchar(255),
    @JoinView nvarchar(255),
    @JoinEntityJoinField nvarchar(255),
    @JoinEntityInverseJoinField nvarchar(255),
    @DisplayInForm bit,
    @DisplayName nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[EntityRelationship]
        (
            [EntityID],
            [RelatedEntityID],
            [BundleInAPI],
            [IncludeInParentAllQuery],
            [Type],
            [EntityKeyField],
            [RelatedEntityJoinField],
            [JoinView],
            [JoinEntityJoinField],
            [JoinEntityInverseJoinField],
            [DisplayInForm],
            [DisplayName]
        )
    VALUES
        (
            @EntityID,
            @RelatedEntityID,
            @BundleInAPI,
            @IncludeInParentAllQuery,
            @Type,
            @EntityKeyField,
            @RelatedEntityJoinField,
            @JoinView,
            @JoinEntityJoinField,
            @JoinEntityInverseJoinField,
            @DisplayInForm,
            @DisplayName
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwEntityRelationships] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateEntityRelationship] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Lists
-- Item: spCreateList
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR List
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateList]
GO

CREATE PROCEDURE [__mj].[spCreateList]
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @EntityID int,
    @UserID int,
    @ExternalSystemRecordID nvarchar(100),
    @CompanyIntegrationID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[List]
        (
            [Name],
            [Description],
            [EntityID],
            [UserID],
            [ExternalSystemRecordID],
            [CompanyIntegrationID]
        )
    VALUES
        (
            @Name,
            @Description,
            @EntityID,
            @UserID,
            @ExternalSystemRecordID,
            @CompanyIntegrationID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwLists] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateList] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: List Details
-- Item: spCreateListDetail
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR ListDetail
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateListDetail]
GO

CREATE PROCEDURE [__mj].[spCreateListDetail]
    @ListID int,
    @RecordID nvarchar(255),
    @Sequence int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[ListDetail]
        (
            [ListID],
            [RecordID],
            [Sequence]
        )
    VALUES
        (
            @ListID,
            @RecordID,
            @Sequence
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwListDetails] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateListDetail] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queries
-- Item: spCreateQuery
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Query
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateQuery]
GO

CREATE PROCEDURE [__mj].[spCreateQuery]
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @CategoryID int,
    @SQL nvarchar(MAX),
    @OriginalSQL nvarchar(MAX),
    @Feedback nvarchar(MAX),
    @Status nvarchar(15),
    @QualityRank int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[Query]
        (
            [Name],
            [Description],
            [CategoryID],
            [SQL],
            [OriginalSQL],
            [Feedback],
            [Status],
            [QualityRank]
        )
    VALUES
        (
            @Name,
            @Description,
            @CategoryID,
            @SQL,
            @OriginalSQL,
            @Feedback,
            @Status,
            @QualityRank
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwQueries] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateQuery] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Categories
-- Item: spCreateQueryCategory
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR QueryCategory
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateQueryCategory]
GO

CREATE PROCEDURE [__mj].[spCreateQueryCategory]
    @Name nvarchar(50),
    @ParentID int,
    @Description nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[QueryCategory]
        (
            [Name],
            [ParentID],
            [Description]
        )
    VALUES
        (
            @Name,
            @ParentID,
            @Description
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwQueryCategories] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateQueryCategory] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Fields
-- Item: spCreateQueryField
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR QueryField
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateQueryField]
GO

CREATE PROCEDURE [__mj].[spCreateQueryField]
    @QueryID int,
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @Sequence int,
    @SQLBaseType nvarchar(50),
    @SQLFullType nvarchar(100),
    @SourceEntityID int,
    @SourceFieldName nvarchar(255),
    @IsComputed bit,
    @ComputationDescription nvarchar(MAX),
    @IsSummary bit,
    @SummaryDescription nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[QueryField]
        (
            [QueryID],
            [Name],
            [Description],
            [Sequence],
            [SQLBaseType],
            [SQLFullType],
            [SourceEntityID],
            [SourceFieldName],
            [IsComputed],
            [ComputationDescription],
            [IsSummary],
            [SummaryDescription]
        )
    VALUES
        (
            @QueryID,
            @Name,
            @Description,
            @Sequence,
            @SQLBaseType,
            @SQLFullType,
            @SourceEntityID,
            @SourceFieldName,
            @IsComputed,
            @ComputationDescription,
            @IsSummary,
            @SummaryDescription
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwQueryFields] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateQueryField] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Permissions
-- Item: spCreateQueryPermission
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR QueryPermission
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateQueryPermission]
GO

CREATE PROCEDURE [__mj].[spCreateQueryPermission]
    @QueryID int,
    @RoleName nvarchar(50)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[QueryPermission]
        (
            [QueryID],
            [RoleName]
        )
    VALUES
        (
            @QueryID,
            @RoleName
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwQueryPermissions] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateQueryPermission] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queues
-- Item: spCreateQueue
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Queue
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateQueue]
GO

CREATE PROCEDURE [__mj].[spCreateQueue]
    @Name nvarchar(50),
    @Description nvarchar(MAX),
    @QueueTypeID int,
    @IsActive bit,
    @ProcessPID int,
    @ProcessPlatform nvarchar(30),
    @ProcessVersion nvarchar(15),
    @ProcessCwd nvarchar(100),
    @ProcessIPAddress nvarchar(50),
    @ProcessMacAddress nvarchar(50),
    @ProcessOSName nvarchar(25),
    @ProcessOSVersion nvarchar(10),
    @ProcessHostName nvarchar(50),
    @ProcessUserID nvarchar(25),
    @ProcessUserName nvarchar(50),
    @LastHeartbeat datetime
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[Queue]
        (
            [Name],
            [Description],
            [QueueTypeID],
            [IsActive],
            [ProcessPID],
            [ProcessPlatform],
            [ProcessVersion],
            [ProcessCwd],
            [ProcessIPAddress],
            [ProcessMacAddress],
            [ProcessOSName],
            [ProcessOSVersion],
            [ProcessHostName],
            [ProcessUserID],
            [ProcessUserName],
            [LastHeartbeat]
        )
    VALUES
        (
            @Name,
            @Description,
            @QueueTypeID,
            @IsActive,
            @ProcessPID,
            @ProcessPlatform,
            @ProcessVersion,
            @ProcessCwd,
            @ProcessIPAddress,
            @ProcessMacAddress,
            @ProcessOSName,
            @ProcessOSVersion,
            @ProcessHostName,
            @ProcessUserID,
            @ProcessUserName,
            @LastHeartbeat
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwQueues] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateQueue] TO [cdp_Developer], [cdp_Developer], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queue Tasks
-- Item: spCreateQueueTask
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR QueueTask
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateQueueTask]
GO

CREATE PROCEDURE [__mj].[spCreateQueueTask]
    @QueueID int,
    @Status nchar(10),
    @StartedAt datetime,
    @EndedAt datetime,
    @Data nvarchar(MAX),
    @Options nvarchar(MAX),
    @Output nvarchar(MAX),
    @ErrorMessage nvarchar(MAX),
    @Comments nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[QueueTask]
        (
            [QueueID],
            [Status],
            [StartedAt],
            [EndedAt],
            [Data],
            [Options],
            [Output],
            [ErrorMessage],
            [Comments]
        )
    VALUES
        (
            @QueueID,
            @Status,
            @StartedAt,
            @EndedAt,
            @Data,
            @Options,
            @Output,
            @ErrorMessage,
            @Comments
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwQueueTasks] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateQueueTask] TO [cdp_Developer], [cdp_Developer], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Record Merge Deletion Logs
-- Item: spCreateRecordMergeDeletionLog
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR RecordMergeDeletionLog
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateRecordMergeDeletionLog]
GO

CREATE PROCEDURE [__mj].[spCreateRecordMergeDeletionLog]
    @RecordMergeLogID int,
    @DeletedRecordID nvarchar(255),
    @Status nvarchar(10),
    @ProcessingLog nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[RecordMergeDeletionLog]
        (
            [RecordMergeLogID],
            [DeletedRecordID],
            [Status],
            [ProcessingLog]
        )
    VALUES
        (
            @RecordMergeLogID,
            @DeletedRecordID,
            @Status,
            @ProcessingLog
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwRecordMergeDeletionLogs] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateRecordMergeDeletionLog] TO [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Record Merge Logs
-- Item: spCreateRecordMergeLog
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR RecordMergeLog
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateRecordMergeLog]
GO

CREATE PROCEDURE [__mj].[spCreateRecordMergeLog]
    @EntityID int,
    @SurvivingRecordID nvarchar(255),
    @InitiatedByUserID int,
    @ApprovalStatus nvarchar(10),
    @ApprovedByUserID int,
    @ProcessingStatus nvarchar(10),
    @ProcessingStartedAt datetime,
    @ProcessingEndedAt datetime,
    @ProcessingLog nvarchar(MAX),
    @Comments nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[RecordMergeLog]
        (
            [EntityID],
            [SurvivingRecordID],
            [InitiatedByUserID],
            [ApprovalStatus],
            [ApprovedByUserID],
            [ProcessingStatus],
            [ProcessingStartedAt],
            [ProcessingEndedAt],
            [ProcessingLog],
            [Comments]
        )
    VALUES
        (
            @EntityID,
            @SurvivingRecordID,
            @InitiatedByUserID,
            @ApprovalStatus,
            @ApprovedByUserID,
            @ProcessingStatus,
            @ProcessingStartedAt,
            @ProcessingEndedAt,
            @ProcessingLog,
            @Comments
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwRecordMergeLogs] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateRecordMergeLog] TO [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Reports
-- Item: spCreateReport
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Report
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateReport]
GO

CREATE PROCEDURE [__mj].[spCreateReport]
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @CategoryID int,
    @UserID int,
    @SharingScope nvarchar(20),
    @ConversationID int,
    @ConversationDetailID int,
    @DataContextID int,
    @Configuration nvarchar(MAX),
    @OutputTriggerTypeID int,
    @OutputFormatTypeID int,
    @OutputDeliveryTypeID int,
    @OutputEventID int,
    @OutputFrequency nvarchar(50),
    @OutputTargetEmail nvarchar(255),
    @OutputWorkflowID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[Report]
        (
            [Name],
            [Description],
            [CategoryID],
            [UserID],
            [SharingScope],
            [ConversationID],
            [ConversationDetailID],
            [DataContextID],
            [Configuration],
            [OutputTriggerTypeID],
            [OutputFormatTypeID],
            [OutputDeliveryTypeID],
            [OutputEventID],
            [OutputFrequency],
            [OutputTargetEmail],
            [OutputWorkflowID]
        )
    VALUES
        (
            @Name,
            @Description,
            @CategoryID,
            @UserID,
            @SharingScope,
            @ConversationID,
            @ConversationDetailID,
            @DataContextID,
            @Configuration,
            @OutputTriggerTypeID,
            @OutputFormatTypeID,
            @OutputDeliveryTypeID,
            @OutputEventID,
            @OutputFrequency,
            @OutputTargetEmail,
            @OutputWorkflowID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwReports] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateReport] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Report Categories
-- Item: spCreateReportCategory
-- Generated: 3/10/2024, 9:38:25 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR ReportCategory
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateReportCategory]
GO

CREATE PROCEDURE [__mj].[spCreateReportCategory]
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @ParentID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[ReportCategory]
        (
            [Name],
            [Description],
            [ParentID]
        )
    VALUES
        (
            @Name,
            @Description,
            @ParentID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwReportCategories] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateReportCategory] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Report Snapshots
-- Item: spCreateReportSnapshot
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR ReportSnapshot
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateReportSnapshot]
GO

CREATE PROCEDURE [__mj].[spCreateReportSnapshot]
    @ReportID int,
    @ResultSet nvarchar(MAX),
    @UserID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[ReportSnapshot]
        (
            [ReportID],
            [ResultSet],
            [UserID]
        )
    VALUES
        (
            @ReportID,
            @ResultSet,
            @UserID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwReportSnapshots] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateReportSnapshot] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Schema Info
-- Item: spCreateSchemaInfo
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR SchemaInfo
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateSchemaInfo]
GO

CREATE PROCEDURE [__mj].[spCreateSchemaInfo]
    @SchemaName nvarchar(50),
    @EntityIDMin int,
    @EntityIDMax int,
    @Comments nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[SchemaInfo]
        (
            [SchemaName],
            [EntityIDMin],
            [EntityIDMax],
            [Comments]
        )
    VALUES
        (
            @SchemaName,
            @EntityIDMin,
            @EntityIDMax,
            @Comments
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwSchemaInfos] WHERE [ID] = SCOPE_IDENTITY()
END
GO



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Users
-- Item: spCreateUser
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR User
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateUser]
GO

CREATE PROCEDURE [__mj].[spCreateUser]
    @Name nvarchar(100),
    @FirstName nvarchar(50),
    @LastName nvarchar(50),
    @Title nvarchar(50),
    @Email nvarchar(100),
    @Type nchar(15),
    @IsActive bit,
    @LinkedRecordType nchar(10),
    @EmployeeID int,
    @LinkedEntityID int,
    @LinkedEntityRecordID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[User]
        (
            [Name],
            [FirstName],
            [LastName],
            [Title],
            [Email],
            [Type],
            [IsActive],
            [LinkedRecordType],
            [EmployeeID],
            [LinkedEntityID],
            [LinkedEntityRecordID]
        )
    VALUES
        (
            @Name,
            @FirstName,
            @LastName,
            @Title,
            @Email,
            @Type,
            @IsActive,
            @LinkedRecordType,
            @EmployeeID,
            @LinkedEntityID,
            @LinkedEntityRecordID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwUsers] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateUser] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Application Entities
-- Item: spCreateUserApplicationEntity
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR UserApplicationEntity
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateUserApplicationEntity]
GO

CREATE PROCEDURE [__mj].[spCreateUserApplicationEntity]
    @UserApplicationID int,
    @EntityID int,
    @Sequence int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[UserApplicationEntity]
        (
            [UserApplicationID],
            [EntityID],
            [Sequence]
        )
    VALUES
        (
            @UserApplicationID,
            @EntityID,
            @Sequence
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwUserApplicationEntities] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateUserApplicationEntity] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Favorites
-- Item: spCreateUserFavorite
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR UserFavorite
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateUserFavorite]
GO

CREATE PROCEDURE [__mj].[spCreateUserFavorite]
    @UserID int,
    @EntityID int,
    @RecordID nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[UserFavorite]
        (
            [UserID],
            [EntityID],
            [RecordID]
        )
    VALUES
        (
            @UserID,
            @EntityID,
            @RecordID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwUserFavorites] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateUserFavorite] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Notifications
-- Item: spCreateUserNotification
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR UserNotification
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateUserNotification]
GO

CREATE PROCEDURE [__mj].[spCreateUserNotification]
    @UserID int,
    @Title nvarchar(255),
    @Message nvarchar(MAX),
    @ResourceTypeID int,
    @ResourceRecordID int,
    @ResourceConfiguration nvarchar(MAX),
    @Unread bit,
    @ReadAt datetime
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[UserNotification]
        (
            [UserID],
            [Title],
            [Message],
            [ResourceTypeID],
            [ResourceRecordID],
            [ResourceConfiguration],
            [Unread],
            [ReadAt]
        )
    VALUES
        (
            @UserID,
            @Title,
            @Message,
            @ResourceTypeID,
            @ResourceRecordID,
            @ResourceConfiguration,
            @Unread,
            @ReadAt
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwUserNotifications] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateUserNotification] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Roles
-- Item: spCreateUserRole
-- Generated: 3/10/2024, 9:38:16 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR UserRole
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateUserRole]
GO

CREATE PROCEDURE [__mj].[spCreateUserRole]
    @UserID int,
    @RoleName nvarchar(50)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[UserRole]
        (
            [UserID],
            [RoleName]
        )
    VALUES
        (
            @UserID,
            @RoleName
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwUserRoles] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateUserRole] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Views
-- Item: spCreateUserView
-- Generated: 3/10/2024, 9:38:12 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR UserView
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateUserView]
GO

CREATE PROCEDURE [__mj].[spCreateUserView]
    @UserID int,
    @EntityID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @CategoryID int,
    @IsShared bit,
    @IsDefault bit,
    @GridState nvarchar(MAX),
    @FilterState nvarchar(MAX),
    @CustomFilterState bit,
    @SmartFilterEnabled bit,
    @SmartFilterPrompt nvarchar(MAX),
    @SmartFilterWhereClause nvarchar(MAX),
    @SmartFilterExplanation nvarchar(MAX),
    @WhereClause nvarchar(MAX),
    @CustomWhereClause bit,
    @SortState nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[UserView]
        (
            [UserID],
            [EntityID],
            [Name],
            [Description],
            [CategoryID],
            [IsShared],
            [IsDefault],
            [GridState],
            [FilterState],
            [CustomFilterState],
            [SmartFilterEnabled],
            [SmartFilterPrompt],
            [SmartFilterWhereClause],
            [SmartFilterExplanation],
            [WhereClause],
            [CustomWhereClause],
            [SortState]
        )
    VALUES
        (
            @UserID,
            @EntityID,
            @Name,
            @Description,
            @CategoryID,
            @IsShared,
            @IsDefault,
            @GridState,
            @FilterState,
            @CustomFilterState,
            @SmartFilterEnabled,
            @SmartFilterPrompt,
            @SmartFilterWhereClause,
            @SmartFilterExplanation,
            @WhereClause,
            @CustomWhereClause,
            @SortState
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwUserViews] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateUserView] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Categories
-- Item: spCreateUserViewCategory
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR UserViewCategory
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateUserViewCategory]
GO

CREATE PROCEDURE [__mj].[spCreateUserViewCategory]
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @ParentID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[UserViewCategory]
        (
            [Name],
            [Description],
            [ParentID]
        )
    VALUES
        (
            @Name,
            @Description,
            @ParentID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwUserViewCategories] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateUserViewCategory] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Runs
-- Item: spCreateUserViewRun
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR UserViewRun
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateUserViewRun]
GO

CREATE PROCEDURE [__mj].[spCreateUserViewRun]
    @UserViewID int,
    @RunAt datetime,
    @RunByUserID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[UserViewRun]
        (
            [UserViewID],
            [RunAt],
            [RunByUserID]
        )
    VALUES
        (
            @UserViewID,
            @RunAt,
            @RunByUserID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwUserViewRuns] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateUserViewRun] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Run Details
-- Item: spCreateUserViewRunDetail
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR UserViewRunDetail
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateUserViewRunDetail]
GO

CREATE PROCEDURE [__mj].[spCreateUserViewRunDetail]
    @UserViewRunID int,
    @RecordID nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[UserViewRunDetail]
        (
            [UserViewRunID],
            [RecordID]
        )
    VALUES
        (
            @UserViewRunID,
            @RecordID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwUserViewRunDetails] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateUserViewRunDetail] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Vector Databases
-- Item: spCreateVectorDatabase
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR VectorDatabase
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateVectorDatabase]
GO

CREATE PROCEDURE [__mj].[spCreateVectorDatabase]
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @DefaultURL nvarchar(255),
    @ClassKey nvarchar(100)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[VectorDatabase]
        (
            [Name],
            [Description],
            [DefaultURL],
            [ClassKey]
        )
    VALUES
        (
            @Name,
            @Description,
            @DefaultURL,
            @ClassKey
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwVectorDatabases] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateVectorDatabase] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Vector Indexes
-- Item: spCreateVectorIndex
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR VectorIndex
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateVectorIndex]
GO

CREATE PROCEDURE [__mj].[spCreateVectorIndex]
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @VectorDatabaseID int,
    @EmbeddingModelID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[VectorIndex]
        (
            [Name],
            [Description],
            [VectorDatabaseID],
            [EmbeddingModelID]
        )
    VALUES
        (
            @Name,
            @Description,
            @VectorDatabaseID,
            @EmbeddingModelID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwVectorIndexes] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateVectorIndex] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workspaces
-- Item: spCreateWorkspace
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR Workspace
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateWorkspace]
GO

CREATE PROCEDURE [__mj].[spCreateWorkspace]
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @UserID int
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[Workspace]
        (
            [Name],
            [Description],
            [UserID]
        )
    VALUES
        (
            @Name,
            @Description,
            @UserID
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwWorkspaces] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateWorkspace] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workspace Items
-- Item: spCreateWorkspaceItem
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR WorkspaceItem
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spCreateWorkspaceItem]
GO

CREATE PROCEDURE [__mj].[spCreateWorkspaceItem]
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @WorkSpaceID int,
    @ResourceTypeID int,
    @ResourceRecordID nvarchar(255),
    @Sequence int,
    @Configuration nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    
    INSERT INTO 
    [__mj].[WorkspaceItem]
        (
            [Name],
            [Description],
            [WorkSpaceID],
            [ResourceTypeID],
            [ResourceRecordID],
            [Sequence],
            [Configuration]
        )
    VALUES
        (
            @Name,
            @Description,
            @WorkSpaceID,
            @ResourceTypeID,
            @ResourceRecordID,
            @Sequence,
            @Configuration
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [__mj].[vwWorkspaceItems] WHERE [ID] = SCOPE_IDENTITY()
END
GO
GRANT EXECUTE ON [__mj].[spCreateWorkspaceItem] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Application Entities
-- Item: spDeleteApplicationEntity
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR ApplicationEntity
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteApplicationEntity]
GO

CREATE PROCEDURE [__mj].[spDeleteApplicationEntity]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[ApplicationEntity]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteApplicationEntity] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Companies
-- Item: spDeleteCompany
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR Company
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteCompany]
GO

CREATE PROCEDURE [__mj].[spDeleteCompany]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[Company]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteCompany] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Conversation Details
-- Item: spDeleteConversationDetail
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR ConversationDetail
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteConversationDetail]
GO

CREATE PROCEDURE [__mj].[spDeleteConversationDetail]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[ConversationDetail]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteConversationDetail] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dashboards
-- Item: spDeleteDashboard
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR Dashboard
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteDashboard]
GO

CREATE PROCEDURE [__mj].[spDeleteDashboard]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[Dashboard]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteDashboard] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employees
-- Item: spDeleteEmployee
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR Employee
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteEmployee]
GO

CREATE PROCEDURE [__mj].[spDeleteEmployee]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[Employee]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteEmployee] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entities
-- Item: spDeleteEntity
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR Entity
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteEntity]
GO

CREATE PROCEDURE [__mj].[spDeleteEntity]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[Entity]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteEntity] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Fields
-- Item: spDeleteEntityField
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR EntityField
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteEntityField]
GO

CREATE PROCEDURE [__mj].[spDeleteEntityField]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[EntityField]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteEntityField] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Permissions
-- Item: spDeleteEntityPermission
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR EntityPermission
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteEntityPermission]
GO

CREATE PROCEDURE [__mj].[spDeleteEntityPermission]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[EntityPermission]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteEntityPermission] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Relationships
-- Item: spDeleteEntityRelationship
-- Generated: 3/10/2024, 9:38:12 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR EntityRelationship
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteEntityRelationship]
GO

CREATE PROCEDURE [__mj].[spDeleteEntityRelationship]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[EntityRelationship]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteEntityRelationship] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Lists
-- Item: spDeleteList
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR List
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteList]
GO

CREATE PROCEDURE [__mj].[spDeleteList]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[List]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteList] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: List Details
-- Item: spDeleteListDetail
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR ListDetail
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteListDetail]
GO

CREATE PROCEDURE [__mj].[spDeleteListDetail]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[ListDetail]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteListDetail] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Reports
-- Item: spDeleteReport
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR Report
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteReport]
GO

CREATE PROCEDURE [__mj].[spDeleteReport]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[Report]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteReport] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Report Snapshots
-- Item: spDeleteReportSnapshot
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR ReportSnapshot
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteReportSnapshot]
GO

CREATE PROCEDURE [__mj].[spDeleteReportSnapshot]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[ReportSnapshot]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteReportSnapshot] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Application Entities
-- Item: spDeleteUserApplicationEntity
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR UserApplicationEntity
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteUserApplicationEntity]
GO

CREATE PROCEDURE [__mj].[spDeleteUserApplicationEntity]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[UserApplicationEntity]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteUserApplicationEntity] TO [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Favorites
-- Item: spDeleteUserFavorite
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR UserFavorite
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteUserFavorite]
GO

CREATE PROCEDURE [__mj].[spDeleteUserFavorite]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[UserFavorite]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteUserFavorite] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Views
-- Item: spDeleteUserView
-- Generated: 3/10/2024, 9:38:12 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR UserView
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteUserView]
GO

CREATE PROCEDURE [__mj].[spDeleteUserView]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[UserView]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteUserView] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workspaces
-- Item: spDeleteWorkspace
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR Workspace
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteWorkspace]
GO

CREATE PROCEDURE [__mj].[spDeleteWorkspace]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[Workspace]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteWorkspace] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workspace Items
-- Item: spDeleteWorkspaceItem
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- DELETE PROCEDURE FOR WorkspaceItem
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spDeleteWorkspaceItem]
GO

CREATE PROCEDURE [__mj].[spDeleteWorkspaceItem]
    @ID int
AS  
BEGIN
    SET NOCOUNT ON;

    DELETE FROM 
        [__mj].[WorkspaceItem]
    WHERE 
        [ID] = @ID

    SELECT @ID AS [ID] -- Return the primary key to indicate we successfully deleted the record
END
GO
GRANT EXECUTE ON [__mj].[spDeleteWorkspaceItem] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Actions
-- Item: spUpdateAIAction
-- Generated: 3/10/2024, 9:38:17 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR AIAction  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateAIAction]
GO

CREATE PROCEDURE [__mj].[spUpdateAIAction]
    @ID int,
    @Name nvarchar(50),
    @Description nvarchar(MAX),
    @DefaultModelID int,
    @DefaultPrompt nvarchar(MAX),
    @IsActive bit
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[AIAction]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [DefaultModelID] = @DefaultModelID,
        [DefaultPrompt] = @DefaultPrompt,
        [IsActive] = @IsActive,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwAIActions] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateAIAction] TO [cdp_Integration], [cdp_Developer]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Models
-- Item: spUpdateAIModel
-- Generated: 3/10/2024, 9:38:17 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR AIModel  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateAIModel]
GO

CREATE PROCEDURE [__mj].[spUpdateAIModel]
    @ID int,
    @Name nvarchar(50),
    @Vendor nvarchar(50),
    @AIModelTypeID int,
    @Description nvarchar(MAX),
    @DriverClass nvarchar(100),
    @DriverImportPath nvarchar(255),
    @IsActive bit
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[AIModel]
    SET 
        [Name] = @Name,
        [Vendor] = @Vendor,
        [AIModelTypeID] = @AIModelTypeID,
        [Description] = @Description,
        [DriverClass] = @DriverClass,
        [DriverImportPath] = @DriverImportPath,
        [IsActive] = @IsActive,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwAIModels] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateAIModel] TO [cdp_Integration], [cdp_Developer]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Model Actions
-- Item: spUpdateAIModelAction
-- Generated: 3/10/2024, 9:38:17 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR AIModelAction  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateAIModelAction]
GO

CREATE PROCEDURE [__mj].[spUpdateAIModelAction]
    @ID int,
    @AIModelID int,
    @AIActionID int,
    @IsActive bit
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[AIModelAction]
    SET 
        [AIModelID] = @AIModelID,
        [AIActionID] = @AIActionID,
        [IsActive] = @IsActive,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwAIModelActions] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateAIModelAction] TO [cdp_Integration], [cdp_Developer]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Model Types
-- Item: spUpdateAIModelType
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR AIModelType  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateAIModelType]
GO

CREATE PROCEDURE [__mj].[spUpdateAIModelType]
    @ID int,
    @Name nvarchar(50),
    @Description nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[AIModelType]
    SET 
        [Name] = @Name,
        [Description] = @Description
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwAIModelTypes] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateAIModelType] TO [cdp_Integration], [cdp_Developer]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Applications
-- Item: spUpdateApplication
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Application  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateApplication]
GO

CREATE PROCEDURE [__mj].[spUpdateApplication]
    @ID int,
    @Name nvarchar(50),
    @Description nvarchar(500)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Application]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwApplications] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateApplication] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Application Entities
-- Item: spUpdateApplicationEntity
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR ApplicationEntity  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateApplicationEntity]
GO

CREATE PROCEDURE [__mj].[spUpdateApplicationEntity]
    @ID int,
    @ApplicationName nvarchar(50),
    @EntityID int,
    @Sequence int,
    @DefaultForNewUser bit
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[ApplicationEntity]
    SET 
        [ApplicationName] = @ApplicationName,
        [EntityID] = @EntityID,
        [Sequence] = @Sequence,
        [DefaultForNewUser] = @DefaultForNewUser,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwApplicationEntities] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateApplicationEntity] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Audit Logs
-- Item: spUpdateAuditLog
-- Generated: 3/10/2024, 9:38:16 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR AuditLog  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateAuditLog]
GO

CREATE PROCEDURE [__mj].[spUpdateAuditLog]
    @ID int,
    @AuditLogTypeName nvarchar(50),
    @UserID int,
    @AuthorizationName nvarchar(100),
    @Status nvarchar(50),
    @Description nvarchar(MAX),
    @Details nvarchar(MAX),
    @EntityID int,
    @RecordID nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[AuditLog]
    SET 
        [AuditLogTypeName] = @AuditLogTypeName,
        [UserID] = @UserID,
        [AuthorizationName] = @AuthorizationName,
        [Status] = @Status,
        [Description] = @Description,
        [Details] = @Details,
        [EntityID] = @EntityID,
        [RecordID] = @RecordID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwAuditLogs] WHERE [ID] = @ID
END
GO
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Companies
-- Item: spUpdateCompany
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Company  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateCompany]
GO

CREATE PROCEDURE [__mj].[spUpdateCompany]
    @ID int,
    @Name nvarchar(50),
    @Description nvarchar(200),
    @Website nvarchar(100),
    @LogoURL nvarchar(500),
    @Domain nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Company]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [Website] = @Website,
        [LogoURL] = @LogoURL,
        [UpdatedAt] = GETDATE(),
        [Domain] = @Domain
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwCompanies] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateCompany] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integrations
-- Item: spUpdateCompanyIntegration
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR CompanyIntegration  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateCompanyIntegration]
GO

CREATE PROCEDURE [__mj].[spUpdateCompanyIntegration]
    @ID int,
    @CompanyName nvarchar(50),
    @IntegrationName nvarchar(100),
    @IsActive bit,
    @AccessToken nvarchar(255),
    @RefreshToken nvarchar(255),
    @TokenExpirationDate datetime,
    @APIKey nvarchar(255),
    @ExternalSystemID nvarchar(100),
    @IsExternalSystemReadOnly bit,
    @ClientID nvarchar(255),
    @ClientSecret nvarchar(255),
    @CustomAttribute1 nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[CompanyIntegration]
    SET 
        [CompanyName] = @CompanyName,
        [IntegrationName] = @IntegrationName,
        [IsActive] = @IsActive,
        [AccessToken] = @AccessToken,
        [RefreshToken] = @RefreshToken,
        [TokenExpirationDate] = @TokenExpirationDate,
        [APIKey] = @APIKey,
        [UpdatedAt] = GETDATE(),
        [ExternalSystemID] = @ExternalSystemID,
        [IsExternalSystemReadOnly] = @IsExternalSystemReadOnly,
        [ClientID] = @ClientID,
        [ClientSecret] = @ClientSecret,
        [CustomAttribute1] = @CustomAttribute1
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwCompanyIntegrations] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateCompanyIntegration] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Record Maps
-- Item: spUpdateCompanyIntegrationRecordMap
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR CompanyIntegrationRecordMap  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateCompanyIntegrationRecordMap]
GO

CREATE PROCEDURE [__mj].[spUpdateCompanyIntegrationRecordMap]
    @ID int,
    @CompanyIntegrationID int,
    @ExternalSystemRecordID nvarchar(100),
    @EntityID int,
    @EntityRecordID nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[CompanyIntegrationRecordMap]
    SET 
        [CompanyIntegrationID] = @CompanyIntegrationID,
        [ExternalSystemRecordID] = @ExternalSystemRecordID,
        [EntityID] = @EntityID,
        [EntityRecordID] = @EntityRecordID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwCompanyIntegrationRecordMaps] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateCompanyIntegrationRecordMap] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Runs
-- Item: spUpdateCompanyIntegrationRun
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR CompanyIntegrationRun  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateCompanyIntegrationRun]
GO

CREATE PROCEDURE [__mj].[spUpdateCompanyIntegrationRun]
    @ID int,
    @CompanyIntegrationID int,
    @RunByUserID int,
    @StartedAt datetime,
    @EndedAt datetime,
    @TotalRecords int,
    @Comments nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[CompanyIntegrationRun]
    SET 
        [CompanyIntegrationID] = @CompanyIntegrationID,
        [RunByUserID] = @RunByUserID,
        [StartedAt] = @StartedAt,
        [EndedAt] = @EndedAt,
        [TotalRecords] = @TotalRecords,
        [Comments] = @Comments
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwCompanyIntegrationRuns] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateCompanyIntegrationRun] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Run API Logs
-- Item: spUpdateCompanyIntegrationRunAPILog
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR CompanyIntegrationRunAPILog  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateCompanyIntegrationRunAPILog]
GO

CREATE PROCEDURE [__mj].[spUpdateCompanyIntegrationRunAPILog]
    @ID int,
    @CompanyIntegrationRunID int,
    @ExecutedAt datetime,
    @IsSuccess bit,
    @RequestMethod nvarchar(12),
    @URL nvarchar(MAX),
    @Parameters nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[CompanyIntegrationRunAPILog]
    SET 
        [CompanyIntegrationRunID] = @CompanyIntegrationRunID,
        [ExecutedAt] = @ExecutedAt,
        [IsSuccess] = @IsSuccess,
        [RequestMethod] = @RequestMethod,
        [URL] = @URL,
        [Parameters] = @Parameters
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwCompanyIntegrationRunAPILogs] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateCompanyIntegrationRunAPILog] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Run Details
-- Item: spUpdateCompanyIntegrationRunDetail
-- Generated: 3/10/2024, 9:38:12 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR CompanyIntegrationRunDetail  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateCompanyIntegrationRunDetail]
GO

CREATE PROCEDURE [__mj].[spUpdateCompanyIntegrationRunDetail]
    @ID int,
    @CompanyIntegrationRunID int,
    @EntityID int,
    @RecordID nvarchar(255),
    @Action nchar(20),
    @ExecutedAt datetime,
    @IsSuccess bit
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[CompanyIntegrationRunDetail]
    SET 
        [CompanyIntegrationRunID] = @CompanyIntegrationRunID,
        [EntityID] = @EntityID,
        [RecordID] = @RecordID,
        [Action] = @Action,
        [ExecutedAt] = @ExecutedAt,
        [IsSuccess] = @IsSuccess
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwCompanyIntegrationRunDetails] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateCompanyIntegrationRunDetail] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Conversations
-- Item: spUpdateConversation
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Conversation  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateConversation]
GO

CREATE PROCEDURE [__mj].[spUpdateConversation]
    @ID int,
    @UserID int,
    @ExternalID nvarchar(100),
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @Type nvarchar(50),
    @IsArchived bit,
    @LinkedEntityID int,
    @LinkedRecordID int,
    @DataContextID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Conversation]
    SET 
        [UserID] = @UserID,
        [ExternalID] = @ExternalID,
        [Name] = @Name,
        [Description] = @Description,
        [Type] = @Type,
        [IsArchived] = @IsArchived,
        [LinkedEntityID] = @LinkedEntityID,
        [LinkedRecordID] = @LinkedRecordID,
        [DataContextID] = @DataContextID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwConversations] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateConversation] TO [cdp_UI]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Conversation Details
-- Item: spUpdateConversationDetail
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR ConversationDetail  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateConversationDetail]
GO

CREATE PROCEDURE [__mj].[spUpdateConversationDetail]
    @ID int,
    @ConversationID int,
    @ExternalID nvarchar(100),
    @Role nvarchar(20),
    @Message nvarchar(MAX),
    @Error nvarchar(MAX),
    @HiddenToUser bit
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[ConversationDetail]
    SET 
        [ConversationID] = @ConversationID,
        [ExternalID] = @ExternalID,
        [Role] = @Role,
        [Message] = @Message,
        [Error] = @Error,
        [HiddenToUser] = @HiddenToUser,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwConversationDetails] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateConversationDetail] TO [cdp_UI]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dashboards
-- Item: spUpdateDashboard
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Dashboard  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateDashboard]
GO

CREATE PROCEDURE [__mj].[spUpdateDashboard]
    @ID int,
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @CategoryID int,
    @UIConfigDetails nvarchar(MAX),
    @UserID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Dashboard]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [CategoryID] = @CategoryID,
        [UIConfigDetails] = @UIConfigDetails,
        [UserID] = @UserID
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwDashboards] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateDashboard] TO [cdp_UI]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dashboard Categories
-- Item: spUpdateDashboardCategory
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR DashboardCategory  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateDashboardCategory]
GO

CREATE PROCEDURE [__mj].[spUpdateDashboardCategory]
    @ID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @ParentID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[DashboardCategory]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [ParentID] = @ParentID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwDashboardCategories] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateDashboardCategory] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Data Contexts
-- Item: spUpdateDataContext
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR DataContext  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateDataContext]
GO

CREATE PROCEDURE [__mj].[spUpdateDataContext]
    @ID int,
    @Name nvarchar(255),
    @UserID int,
    @Description nvarchar(MAX),
    @LastRefreshedAt datetime
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[DataContext]
    SET 
        [Name] = @Name,
        [UserID] = @UserID,
        [Description] = @Description,
        [LastRefreshedAt] = @LastRefreshedAt,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwDataContexts] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateDataContext] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Data Context Items
-- Item: spUpdateDataContextItem
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR DataContextItem  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateDataContextItem]
GO

CREATE PROCEDURE [__mj].[spUpdateDataContextItem]
    @ID int,
    @DataContextID int,
    @Type nvarchar(50),
    @ViewID int,
    @QueryID int,
    @EntityID int,
    @RecordID nvarchar(255),
    @SQL nvarchar(MAX),
    @DataJSON nvarchar(MAX),
    @LastRefreshedAt datetime
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[DataContextItem]
    SET 
        [DataContextID] = @DataContextID,
        [Type] = @Type,
        [ViewID] = @ViewID,
        [QueryID] = @QueryID,
        [EntityID] = @EntityID,
        [RecordID] = @RecordID,
        [SQL] = @SQL,
        [DataJSON] = @DataJSON,
        [LastRefreshedAt] = @LastRefreshedAt,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwDataContextItems] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateDataContextItem] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employees
-- Item: spUpdateEmployee
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Employee  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEmployee]
GO

CREATE PROCEDURE [__mj].[spUpdateEmployee]
    @ID int,
    @FirstName nvarchar(30),
    @LastName nvarchar(50),
    @Title nvarchar(50),
    @Email nvarchar(100),
    @Phone nvarchar(20),
    @Active bit,
    @CompanyID int,
    @SupervisorID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Employee]
    SET 
        [FirstName] = @FirstName,
        [LastName] = @LastName,
        [Title] = @Title,
        [Email] = @Email,
        [Phone] = @Phone,
        [Active] = @Active,
        [CompanyID] = @CompanyID,
        [SupervisorID] = @SupervisorID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEmployees] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEmployee] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employee Company Integrations
-- Item: spUpdateEmployeeCompanyIntegration
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EmployeeCompanyIntegration  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEmployeeCompanyIntegration]
GO

CREATE PROCEDURE [__mj].[spUpdateEmployeeCompanyIntegration]
    @ID int,
    @EmployeeID int,
    @CompanyIntegrationID int,
    @ExternalSystemRecordID nvarchar(100),
    @IsActive bit
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EmployeeCompanyIntegration]
    SET 
        [EmployeeID] = @EmployeeID,
        [CompanyIntegrationID] = @CompanyIntegrationID,
        [ExternalSystemRecordID] = @ExternalSystemRecordID,
        [IsActive] = @IsActive,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEmployeeCompanyIntegrations] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEmployeeCompanyIntegration] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employee Roles
-- Item: spUpdateEmployeeRole
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EmployeeRole  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEmployeeRole]
GO

CREATE PROCEDURE [__mj].[spUpdateEmployeeRole]
    @ID int,
    @EmployeeID int,
    @RoleID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EmployeeRole]
    SET 
        [EmployeeID] = @EmployeeID,
        [RoleID] = @RoleID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEmployeeRoles] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEmployeeRole] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employee Skills
-- Item: spUpdateEmployeeSkill
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EmployeeSkill  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEmployeeSkill]
GO

CREATE PROCEDURE [__mj].[spUpdateEmployeeSkill]
    @ID int,
    @EmployeeID int,
    @SkillID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EmployeeSkill]
    SET 
        [EmployeeID] = @EmployeeID,
        [SkillID] = @SkillID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEmployeeSkills] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEmployeeSkill] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entities
-- Item: spUpdateEntity
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Entity  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEntity]
GO

CREATE PROCEDURE [__mj].[spUpdateEntity]
    @ID int,
    @ParentID int,
    @Name nvarchar(255),
    @NameSuffix nvarchar(255),
    @Description nvarchar(MAX),
    @AutoUpdateDescription bit,
    @BaseView nvarchar(255),
    @BaseViewGenerated bit,
    @VirtualEntity bit,
    @TrackRecordChanges bit,
    @AuditRecordAccess bit,
    @AuditViewRuns bit,
    @IncludeInAPI bit,
    @AllowAllRowsAPI bit,
    @AllowUpdateAPI bit,
    @AllowCreateAPI bit,
    @AllowDeleteAPI bit,
    @CustomResolverAPI bit,
    @AllowUserSearchAPI bit,
    @FullTextSearchEnabled bit,
    @FullTextCatalog nvarchar(255),
    @FullTextCatalogGenerated bit,
    @FullTextIndex nvarchar(255),
    @FullTextIndexGenerated bit,
    @FullTextSearchFunction nvarchar(255),
    @FullTextSearchFunctionGenerated bit,
    @UserViewMaxRows int,
    @spCreate nvarchar(255),
    @spUpdate nvarchar(255),
    @spDelete nvarchar(255),
    @spCreateGenerated bit,
    @spUpdateGenerated bit,
    @spDeleteGenerated bit,
    @CascadeDeletes bit,
    @UserFormGenerated bit,
    @EntityObjectSubclassName nvarchar(255),
    @EntityObjectSubclassImport nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Entity]
    SET 
        [ParentID] = @ParentID,
        [Name] = @Name,
        [NameSuffix] = @NameSuffix,
        [Description] = @Description,
        [AutoUpdateDescription] = @AutoUpdateDescription,
        [BaseView] = @BaseView,
        [BaseViewGenerated] = @BaseViewGenerated,
        [VirtualEntity] = @VirtualEntity,
        [TrackRecordChanges] = @TrackRecordChanges,
        [AuditRecordAccess] = @AuditRecordAccess,
        [AuditViewRuns] = @AuditViewRuns,
        [IncludeInAPI] = @IncludeInAPI,
        [AllowAllRowsAPI] = @AllowAllRowsAPI,
        [AllowUpdateAPI] = @AllowUpdateAPI,
        [AllowCreateAPI] = @AllowCreateAPI,
        [AllowDeleteAPI] = @AllowDeleteAPI,
        [CustomResolverAPI] = @CustomResolverAPI,
        [AllowUserSearchAPI] = @AllowUserSearchAPI,
        [FullTextSearchEnabled] = @FullTextSearchEnabled,
        [FullTextCatalog] = @FullTextCatalog,
        [FullTextCatalogGenerated] = @FullTextCatalogGenerated,
        [FullTextIndex] = @FullTextIndex,
        [FullTextIndexGenerated] = @FullTextIndexGenerated,
        [FullTextSearchFunction] = @FullTextSearchFunction,
        [FullTextSearchFunctionGenerated] = @FullTextSearchFunctionGenerated,
        [UserViewMaxRows] = @UserViewMaxRows,
        [spCreate] = @spCreate,
        [spUpdate] = @spUpdate,
        [spDelete] = @spDelete,
        [spCreateGenerated] = @spCreateGenerated,
        [spUpdateGenerated] = @spUpdateGenerated,
        [spDeleteGenerated] = @spDeleteGenerated,
        [CascadeDeletes] = @CascadeDeletes,
        [UserFormGenerated] = @UserFormGenerated,
        [EntityObjectSubclassName] = @EntityObjectSubclassName,
        [EntityObjectSubclassImport] = @EntityObjectSubclassImport,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEntities] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEntity] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity AI Actions
-- Item: spUpdateEntityAIAction
-- Generated: 3/10/2024, 9:38:17 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EntityAIAction  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEntityAIAction]
GO

CREATE PROCEDURE [__mj].[spUpdateEntityAIAction]
    @ID int,
    @EntityID int,
    @AIActionID int,
    @AIModelID int,
    @Name nvarchar(25),
    @Prompt nvarchar(MAX),
    @TriggerEvent nchar(15),
    @UserMessage nvarchar(MAX),
    @OutputType nchar(10),
    @OutputField nvarchar(50),
    @SkipIfOutputFieldNotEmpty bit,
    @OutputEntityID int,
    @Comments nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EntityAIAction]
    SET 
        [EntityID] = @EntityID,
        [AIActionID] = @AIActionID,
        [AIModelID] = @AIModelID,
        [Name] = @Name,
        [Prompt] = @Prompt,
        [TriggerEvent] = @TriggerEvent,
        [UserMessage] = @UserMessage,
        [OutputType] = @OutputType,
        [OutputField] = @OutputField,
        [SkipIfOutputFieldNotEmpty] = @SkipIfOutputFieldNotEmpty,
        [OutputEntityID] = @OutputEntityID,
        [Comments] = @Comments
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEntityAIActions] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEntityAIAction] TO [cdp_Integration], [cdp_Developer]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Documents
-- Item: spUpdateEntityDocument
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EntityDocument  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEntityDocument]
GO

CREATE PROCEDURE [__mj].[spUpdateEntityDocument]
    @ID int,
    @Name nvarchar(250),
    @EntityID int,
    @TypeID int,
    @Status nvarchar(15),
    @Template nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EntityDocument]
    SET 
        [Name] = @Name,
        [EntityID] = @EntityID,
        [TypeID] = @TypeID,
        [Status] = @Status,
        [Template] = @Template,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEntityDocuments] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEntityDocument] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Document Runs
-- Item: spUpdateEntityDocumentRun
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EntityDocumentRun  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEntityDocumentRun]
GO

CREATE PROCEDURE [__mj].[spUpdateEntityDocumentRun]
    @ID int,
    @EntityDocumentID int,
    @StartedAt datetime,
    @EndedAt datetime,
    @Status nvarchar(15)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EntityDocumentRun]
    SET 
        [EntityDocumentID] = @EntityDocumentID,
        [StartedAt] = @StartedAt,
        [EndedAt] = @EndedAt,
        [Status] = @Status,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEntityDocumentRuns] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEntityDocumentRun] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Document Types
-- Item: spUpdateEntityDocumentType
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EntityDocumentType  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEntityDocumentType]
GO

CREATE PROCEDURE [__mj].[spUpdateEntityDocumentType]
    @ID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EntityDocumentType]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEntityDocumentTypes] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEntityDocumentType] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Fields
-- Item: spUpdateEntityField
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EntityField  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEntityField]
GO

CREATE PROCEDURE [__mj].[spUpdateEntityField]
    @ID int,
    @DisplayName nvarchar(255),
    @Description nvarchar(MAX),
    @AutoUpdateDescription bit,
    @IsPrimaryKey bit,
    @IsUnique bit,
    @Category nvarchar(255),
    @ValueListType nvarchar(20),
    @ExtendedType nvarchar(50),
    @DefaultInView bit,
    @ViewCellTemplate nvarchar(MAX),
    @DefaultColumnWidth int,
    @AllowUpdateAPI bit,
    @AllowUpdateInView bit,
    @IncludeInUserSearchAPI bit,
    @FullTextSearchEnabled bit,
    @UserSearchParamFormatAPI nvarchar(500),
    @IncludeInGeneratedForm bit,
    @GeneratedFormSection nvarchar(10),
    @IsNameField bit,
    @RelatedEntityID int,
    @RelatedEntityFieldName nvarchar(255),
    @IncludeRelatedEntityNameFieldInBaseView bit,
    @RelatedEntityNameFieldMap nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EntityField]
    SET 
        [DisplayName] = @DisplayName,
        [Description] = @Description,
        [AutoUpdateDescription] = @AutoUpdateDescription,
        [IsPrimaryKey] = @IsPrimaryKey,
        [IsUnique] = @IsUnique,
        [Category] = @Category,
        [ValueListType] = @ValueListType,
        [ExtendedType] = @ExtendedType,
        [DefaultInView] = @DefaultInView,
        [ViewCellTemplate] = @ViewCellTemplate,
        [DefaultColumnWidth] = @DefaultColumnWidth,
        [AllowUpdateAPI] = @AllowUpdateAPI,
        [AllowUpdateInView] = @AllowUpdateInView,
        [IncludeInUserSearchAPI] = @IncludeInUserSearchAPI,
        [FullTextSearchEnabled] = @FullTextSearchEnabled,
        [UserSearchParamFormatAPI] = @UserSearchParamFormatAPI,
        [IncludeInGeneratedForm] = @IncludeInGeneratedForm,
        [GeneratedFormSection] = @GeneratedFormSection,
        [IsNameField] = @IsNameField,
        [RelatedEntityID] = @RelatedEntityID,
        [RelatedEntityFieldName] = @RelatedEntityFieldName,
        [IncludeRelatedEntityNameFieldInBaseView] = @IncludeRelatedEntityNameFieldInBaseView,
        [RelatedEntityNameFieldMap] = @RelatedEntityNameFieldMap,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEntityFields] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEntityField] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Permissions
-- Item: spUpdateEntityPermission
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EntityPermission  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEntityPermission]
GO

CREATE PROCEDURE [__mj].[spUpdateEntityPermission]
    @ID int,
    @EntityID int,
    @RoleName nvarchar(50),
    @CanCreate bit,
    @CanRead bit,
    @CanUpdate bit,
    @CanDelete bit,
    @ReadRLSFilterID int,
    @CreateRLSFilterID int,
    @UpdateRLSFilterID int,
    @DeleteRLSFilterID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EntityPermission]
    SET 
        [EntityID] = @EntityID,
        [RoleName] = @RoleName,
        [CanCreate] = @CanCreate,
        [CanRead] = @CanRead,
        [CanUpdate] = @CanUpdate,
        [CanDelete] = @CanDelete,
        [ReadRLSFilterID] = @ReadRLSFilterID,
        [CreateRLSFilterID] = @CreateRLSFilterID,
        [UpdateRLSFilterID] = @UpdateRLSFilterID,
        [DeleteRLSFilterID] = @DeleteRLSFilterID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEntityPermissions] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEntityPermission] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Record Documents
-- Item: spUpdateEntityRecordDocument
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EntityRecordDocument  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEntityRecordDocument]
GO

CREATE PROCEDURE [__mj].[spUpdateEntityRecordDocument]
    @ID int,
    @EntityID int,
    @RecordID nvarchar(255),
    @DocumentText nvarchar(MAX),
    @VectorIndexID int,
    @VectorID nvarchar(50),
    @VectorJSON nvarchar(MAX),
    @EntityRecordUpdatedAt datetime
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EntityRecordDocument]
    SET 
        [EntityID] = @EntityID,
        [RecordID] = @RecordID,
        [DocumentText] = @DocumentText,
        [VectorIndexID] = @VectorIndexID,
        [VectorID] = @VectorID,
        [VectorJSON] = @VectorJSON,
        [EntityRecordUpdatedAt] = @EntityRecordUpdatedAt,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEntityRecordDocuments] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEntityRecordDocument] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Relationships
-- Item: spUpdateEntityRelationship
-- Generated: 3/10/2024, 9:38:12 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR EntityRelationship  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateEntityRelationship]
GO

CREATE PROCEDURE [__mj].[spUpdateEntityRelationship]
    @ID int,
    @EntityID int,
    @RelatedEntityID int,
    @BundleInAPI bit,
    @IncludeInParentAllQuery bit,
    @Type nchar(20),
    @EntityKeyField nvarchar(255),
    @RelatedEntityJoinField nvarchar(255),
    @JoinView nvarchar(255),
    @JoinEntityJoinField nvarchar(255),
    @JoinEntityInverseJoinField nvarchar(255),
    @DisplayInForm bit,
    @DisplayName nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[EntityRelationship]
    SET 
        [EntityID] = @EntityID,
        [RelatedEntityID] = @RelatedEntityID,
        [BundleInAPI] = @BundleInAPI,
        [IncludeInParentAllQuery] = @IncludeInParentAllQuery,
        [Type] = @Type,
        [EntityKeyField] = @EntityKeyField,
        [RelatedEntityJoinField] = @RelatedEntityJoinField,
        [JoinView] = @JoinView,
        [JoinEntityJoinField] = @JoinEntityJoinField,
        [JoinEntityInverseJoinField] = @JoinEntityInverseJoinField,
        [DisplayInForm] = @DisplayInForm,
        [DisplayName] = @DisplayName,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwEntityRelationships] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateEntityRelationship] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Error Logs
-- Item: spUpdateErrorLog
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR ErrorLog  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateErrorLog]
GO

CREATE PROCEDURE [__mj].[spUpdateErrorLog]
    @ID int,
    @CompanyIntegrationRunID int,
    @CompanyIntegrationRunDetailID int,
    @Code nchar(20),
    @Message nvarchar(MAX),
    @CreatedBy nvarchar(50),
    @Status nvarchar(10),
    @Category nvarchar(20),
    @Details nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[ErrorLog]
    SET 
        [CompanyIntegrationRunID] = @CompanyIntegrationRunID,
        [CompanyIntegrationRunDetailID] = @CompanyIntegrationRunDetailID,
        [Code] = @Code,
        [Message] = @Message,
        [CreatedBy] = @CreatedBy,
        [Status] = @Status,
        [Category] = @Category,
        [Details] = @Details
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwErrorLogs] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateErrorLog] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Integrations
-- Item: spUpdateIntegration
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Integration  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateIntegration]
GO

CREATE PROCEDURE [__mj].[spUpdateIntegration]
    @ID int,
    @Name nvarchar(100),
    @Description nvarchar(255),
    @NavigationBaseURL nvarchar(500),
    @ClassName nvarchar(100),
    @ImportPath nvarchar(100),
    @BatchMaxRequestCount int,
    @BatchRequestWaitTime int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Integration]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [NavigationBaseURL] = @NavigationBaseURL,
        [ClassName] = @ClassName,
        [ImportPath] = @ImportPath,
        [BatchMaxRequestCount] = @BatchMaxRequestCount,
        [BatchRequestWaitTime] = @BatchRequestWaitTime,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwIntegrations] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateIntegration] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Integration URL Formats
-- Item: spUpdateIntegrationURLFormat
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR IntegrationURLFormat  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateIntegrationURLFormat]
GO

CREATE PROCEDURE [__mj].[spUpdateIntegrationURLFormat]
    @ID int,
    @IntegrationName nvarchar(100),
    @EntityID int,
    @URLFormat nvarchar(500)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[IntegrationURLFormat]
    SET 
        [IntegrationName] = @IntegrationName,
        [EntityID] = @EntityID,
        [URLFormat] = @URLFormat
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwIntegrationURLFormats] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateIntegrationURLFormat] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Lists
-- Item: spUpdateList
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR List  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateList]
GO

CREATE PROCEDURE [__mj].[spUpdateList]
    @ID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @EntityID int,
    @UserID int,
    @ExternalSystemRecordID nvarchar(100),
    @CompanyIntegrationID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[List]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [EntityID] = @EntityID,
        [UserID] = @UserID,
        [ExternalSystemRecordID] = @ExternalSystemRecordID,
        [CompanyIntegrationID] = @CompanyIntegrationID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwLists] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateList] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: List Details
-- Item: spUpdateListDetail
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR ListDetail  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateListDetail]
GO

CREATE PROCEDURE [__mj].[spUpdateListDetail]
    @ID int,
    @ListID int,
    @RecordID nvarchar(255),
    @Sequence int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[ListDetail]
    SET 
        [ListID] = @ListID,
        [RecordID] = @RecordID,
        [Sequence] = @Sequence
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwListDetails] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateListDetail] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queries
-- Item: spUpdateQuery
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Query  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateQuery]
GO

CREATE PROCEDURE [__mj].[spUpdateQuery]
    @ID int,
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @CategoryID int,
    @SQL nvarchar(MAX),
    @OriginalSQL nvarchar(MAX),
    @Feedback nvarchar(MAX),
    @Status nvarchar(15),
    @QualityRank int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Query]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [CategoryID] = @CategoryID,
        [SQL] = @SQL,
        [OriginalSQL] = @OriginalSQL,
        [Feedback] = @Feedback,
        [Status] = @Status,
        [QualityRank] = @QualityRank,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwQueries] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateQuery] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Categories
-- Item: spUpdateQueryCategory
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR QueryCategory  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateQueryCategory]
GO

CREATE PROCEDURE [__mj].[spUpdateQueryCategory]
    @ID int,
    @Name nvarchar(50),
    @ParentID int,
    @Description nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[QueryCategory]
    SET 
        [Name] = @Name,
        [ParentID] = @ParentID,
        [Description] = @Description,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwQueryCategories] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateQueryCategory] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Fields
-- Item: spUpdateQueryField
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR QueryField  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateQueryField]
GO

CREATE PROCEDURE [__mj].[spUpdateQueryField]
    @ID int,
    @QueryID int,
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @Sequence int,
    @SQLBaseType nvarchar(50),
    @SQLFullType nvarchar(100),
    @SourceEntityID int,
    @SourceFieldName nvarchar(255),
    @IsComputed bit,
    @ComputationDescription nvarchar(MAX),
    @IsSummary bit,
    @SummaryDescription nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[QueryField]
    SET 
        [QueryID] = @QueryID,
        [Name] = @Name,
        [Description] = @Description,
        [Sequence] = @Sequence,
        [SQLBaseType] = @SQLBaseType,
        [SQLFullType] = @SQLFullType,
        [SourceEntityID] = @SourceEntityID,
        [SourceFieldName] = @SourceFieldName,
        [IsComputed] = @IsComputed,
        [ComputationDescription] = @ComputationDescription,
        [IsSummary] = @IsSummary,
        [SummaryDescription] = @SummaryDescription,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwQueryFields] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateQueryField] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Permissions
-- Item: spUpdateQueryPermission
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR QueryPermission  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateQueryPermission]
GO

CREATE PROCEDURE [__mj].[spUpdateQueryPermission]
    @ID int,
    @QueryID int,
    @RoleName nvarchar(50)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[QueryPermission]
    SET 
        [QueryID] = @QueryID,
        [RoleName] = @RoleName,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwQueryPermissions] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateQueryPermission] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queues
-- Item: spUpdateQueue
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Queue  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateQueue]
GO

CREATE PROCEDURE [__mj].[spUpdateQueue]
    @ID int,
    @Name nvarchar(50),
    @Description nvarchar(MAX),
    @QueueTypeID int,
    @IsActive bit,
    @ProcessPID int,
    @ProcessPlatform nvarchar(30),
    @ProcessVersion nvarchar(15),
    @ProcessCwd nvarchar(100),
    @ProcessIPAddress nvarchar(50),
    @ProcessMacAddress nvarchar(50),
    @ProcessOSName nvarchar(25),
    @ProcessOSVersion nvarchar(10),
    @ProcessHostName nvarchar(50),
    @ProcessUserID nvarchar(25),
    @ProcessUserName nvarchar(50),
    @LastHeartbeat datetime
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Queue]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [QueueTypeID] = @QueueTypeID,
        [IsActive] = @IsActive,
        [ProcessPID] = @ProcessPID,
        [ProcessPlatform] = @ProcessPlatform,
        [ProcessVersion] = @ProcessVersion,
        [ProcessCwd] = @ProcessCwd,
        [ProcessIPAddress] = @ProcessIPAddress,
        [ProcessMacAddress] = @ProcessMacAddress,
        [ProcessOSName] = @ProcessOSName,
        [ProcessOSVersion] = @ProcessOSVersion,
        [ProcessHostName] = @ProcessHostName,
        [ProcessUserID] = @ProcessUserID,
        [ProcessUserName] = @ProcessUserName,
        [LastHeartbeat] = @LastHeartbeat,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwQueues] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateQueue] TO [cdp_Developer], [cdp_Developer]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queue Tasks
-- Item: spUpdateQueueTask
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR QueueTask  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateQueueTask]
GO

CREATE PROCEDURE [__mj].[spUpdateQueueTask]
    @ID int,
    @QueueID int,
    @Status nchar(10),
    @StartedAt datetime,
    @EndedAt datetime,
    @Data nvarchar(MAX),
    @Options nvarchar(MAX),
    @Output nvarchar(MAX),
    @ErrorMessage nvarchar(MAX),
    @Comments nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[QueueTask]
    SET 
        [QueueID] = @QueueID,
        [Status] = @Status,
        [StartedAt] = @StartedAt,
        [EndedAt] = @EndedAt,
        [Data] = @Data,
        [Options] = @Options,
        [Output] = @Output,
        [ErrorMessage] = @ErrorMessage,
        [Comments] = @Comments
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwQueueTasks] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateQueueTask] TO [cdp_Developer], [cdp_Developer]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Record Merge Deletion Logs
-- Item: spUpdateRecordMergeDeletionLog
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR RecordMergeDeletionLog  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateRecordMergeDeletionLog]
GO

CREATE PROCEDURE [__mj].[spUpdateRecordMergeDeletionLog]
    @ID int,
    @RecordMergeLogID int,
    @DeletedRecordID nvarchar(255),
    @Status nvarchar(10),
    @ProcessingLog nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[RecordMergeDeletionLog]
    SET 
        [RecordMergeLogID] = @RecordMergeLogID,
        [DeletedRecordID] = @DeletedRecordID,
        [Status] = @Status,
        [ProcessingLog] = @ProcessingLog,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwRecordMergeDeletionLogs] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateRecordMergeDeletionLog] TO [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Record Merge Logs
-- Item: spUpdateRecordMergeLog
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR RecordMergeLog  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateRecordMergeLog]
GO

CREATE PROCEDURE [__mj].[spUpdateRecordMergeLog]
    @ID int,
    @EntityID int,
    @SurvivingRecordID nvarchar(255),
    @InitiatedByUserID int,
    @ApprovalStatus nvarchar(10),
    @ApprovedByUserID int,
    @ProcessingStatus nvarchar(10),
    @ProcessingStartedAt datetime,
    @ProcessingEndedAt datetime,
    @ProcessingLog nvarchar(MAX),
    @Comments nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[RecordMergeLog]
    SET 
        [EntityID] = @EntityID,
        [SurvivingRecordID] = @SurvivingRecordID,
        [InitiatedByUserID] = @InitiatedByUserID,
        [ApprovalStatus] = @ApprovalStatus,
        [ApprovedByUserID] = @ApprovedByUserID,
        [ProcessingStatus] = @ProcessingStatus,
        [ProcessingStartedAt] = @ProcessingStartedAt,
        [ProcessingEndedAt] = @ProcessingEndedAt,
        [ProcessingLog] = @ProcessingLog,
        [Comments] = @Comments,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwRecordMergeLogs] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateRecordMergeLog] TO [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Reports
-- Item: spUpdateReport
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Report  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateReport]
GO

CREATE PROCEDURE [__mj].[spUpdateReport]
    @ID int,
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @CategoryID int,
    @UserID int,
    @SharingScope nvarchar(20),
    @ConversationID int,
    @ConversationDetailID int,
    @DataContextID int,
    @Configuration nvarchar(MAX),
    @OutputTriggerTypeID int,
    @OutputFormatTypeID int,
    @OutputDeliveryTypeID int,
    @OutputEventID int,
    @OutputFrequency nvarchar(50),
    @OutputTargetEmail nvarchar(255),
    @OutputWorkflowID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Report]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [CategoryID] = @CategoryID,
        [UserID] = @UserID,
        [SharingScope] = @SharingScope,
        [ConversationID] = @ConversationID,
        [ConversationDetailID] = @ConversationDetailID,
        [DataContextID] = @DataContextID,
        [Configuration] = @Configuration,
        [OutputTriggerTypeID] = @OutputTriggerTypeID,
        [OutputFormatTypeID] = @OutputFormatTypeID,
        [OutputDeliveryTypeID] = @OutputDeliveryTypeID,
        [OutputEventID] = @OutputEventID,
        [OutputFrequency] = @OutputFrequency,
        [OutputTargetEmail] = @OutputTargetEmail,
        [OutputWorkflowID] = @OutputWorkflowID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwReports] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateReport] TO [cdp_UI]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Report Categories
-- Item: spUpdateReportCategory
-- Generated: 3/10/2024, 9:38:25 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR ReportCategory  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateReportCategory]
GO

CREATE PROCEDURE [__mj].[spUpdateReportCategory]
    @ID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @ParentID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[ReportCategory]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [ParentID] = @ParentID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwReportCategories] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateReportCategory] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Report Snapshots
-- Item: spUpdateReportSnapshot
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR ReportSnapshot  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateReportSnapshot]
GO

CREATE PROCEDURE [__mj].[spUpdateReportSnapshot]
    @ID int,
    @ReportID int,
    @ResultSet nvarchar(MAX),
    @UserID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[ReportSnapshot]
    SET 
        [ReportID] = @ReportID,
        [ResultSet] = @ResultSet,
        [UserID] = @UserID
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwReportSnapshots] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateReportSnapshot] TO [cdp_UI]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Roles
-- Item: spUpdateRole
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Role  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateRole]
GO

CREATE PROCEDURE [__mj].[spUpdateRole]
    @ID int,
    @Name nvarchar(50),
    @Description nvarchar(500),
    @AzureID nvarchar(50),
    @SQLName nvarchar(50)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Role]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [AzureID] = @AzureID,
        [SQLName] = @SQLName,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwRoles] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateRole] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Schema Info
-- Item: spUpdateSchemaInfo
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR SchemaInfo  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateSchemaInfo]
GO

CREATE PROCEDURE [__mj].[spUpdateSchemaInfo]
    @ID int,
    @SchemaName nvarchar(50),
    @EntityIDMin int,
    @EntityIDMax int,
    @Comments nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[SchemaInfo]
    SET 
        [SchemaName] = @SchemaName,
        [EntityIDMin] = @EntityIDMin,
        [EntityIDMax] = @EntityIDMax,
        [Comments] = @Comments,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwSchemaInfos] WHERE [ID] = @ID
END
GO
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Users
-- Item: spUpdateUser
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR User  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateUser]
GO

CREATE PROCEDURE [__mj].[spUpdateUser]
    @ID int,
    @Name nvarchar(100),
    @FirstName nvarchar(50),
    @LastName nvarchar(50),
    @Title nvarchar(50),
    @Email nvarchar(100),
    @Type nchar(15),
    @IsActive bit,
    @LinkedRecordType nchar(10),
    @EmployeeID int,
    @LinkedEntityID int,
    @LinkedEntityRecordID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[User]
    SET 
        [Name] = @Name,
        [FirstName] = @FirstName,
        [LastName] = @LastName,
        [Title] = @Title,
        [Email] = @Email,
        [Type] = @Type,
        [IsActive] = @IsActive,
        [LinkedRecordType] = @LinkedRecordType,
        [EmployeeID] = @EmployeeID,
        [LinkedEntityID] = @LinkedEntityID,
        [LinkedEntityRecordID] = @LinkedEntityRecordID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwUsers] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateUser] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Applications
-- Item: spUpdateUserApplication
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR UserApplication  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateUserApplication]
GO

CREATE PROCEDURE [__mj].[spUpdateUserApplication]
    @ID int,
    @UserID int,
    @ApplicationID int,
    @Sequence int,
    @IsActive bit
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[UserApplication]
    SET 
        [UserID] = @UserID,
        [ApplicationID] = @ApplicationID,
        [Sequence] = @Sequence,
        [IsActive] = @IsActive
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwUserApplications] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateUserApplication] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Application Entities
-- Item: spUpdateUserApplicationEntity
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR UserApplicationEntity  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateUserApplicationEntity]
GO

CREATE PROCEDURE [__mj].[spUpdateUserApplicationEntity]
    @ID int,
    @UserApplicationID int,
    @EntityID int,
    @Sequence int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[UserApplicationEntity]
    SET 
        [UserApplicationID] = @UserApplicationID,
        [EntityID] = @EntityID,
        [Sequence] = @Sequence
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwUserApplicationEntities] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateUserApplicationEntity] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Favorites
-- Item: spUpdateUserFavorite
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR UserFavorite  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateUserFavorite]
GO

CREATE PROCEDURE [__mj].[spUpdateUserFavorite]
    @ID int,
    @UserID int,
    @EntityID int,
    @RecordID nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[UserFavorite]
    SET 
        [UserID] = @UserID,
        [EntityID] = @EntityID,
        [RecordID] = @RecordID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwUserFavorites] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateUserFavorite] TO [cdp_Developer], [cdp_Integration], [cdp_UI]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Notifications
-- Item: spUpdateUserNotification
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR UserNotification  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateUserNotification]
GO

CREATE PROCEDURE [__mj].[spUpdateUserNotification]
    @ID int,
    @UserID int,
    @Title nvarchar(255),
    @Message nvarchar(MAX),
    @ResourceTypeID int,
    @ResourceRecordID int,
    @ResourceConfiguration nvarchar(MAX),
    @Unread bit,
    @ReadAt datetime
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[UserNotification]
    SET 
        [UserID] = @UserID,
        [Title] = @Title,
        [Message] = @Message,
        [ResourceTypeID] = @ResourceTypeID,
        [ResourceRecordID] = @ResourceRecordID,
        [ResourceConfiguration] = @ResourceConfiguration,
        [Unread] = @Unread,
        [ReadAt] = @ReadAt,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwUserNotifications] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateUserNotification] TO [cdp_UI], [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Record Logs
-- Item: spUpdateUserRecordLog
-- Generated: 3/10/2024, 9:38:12 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR UserRecordLog  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateUserRecordLog]
GO

CREATE PROCEDURE [__mj].[spUpdateUserRecordLog]
    @ID int,
    @UserID int,
    @EntityID int,
    @RecordID nvarchar(255),
    @EarliestAt datetime,
    @LatestAt datetime,
    @TotalCount int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[UserRecordLog]
    SET 
        [UserID] = @UserID,
        [EntityID] = @EntityID,
        [RecordID] = @RecordID,
        [EarliestAt] = @EarliestAt,
        [LatestAt] = @LatestAt,
        [TotalCount] = @TotalCount
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwUserRecordLogs] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateUserRecordLog] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Views
-- Item: spUpdateUserView
-- Generated: 3/10/2024, 9:38:12 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR UserView  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateUserView]
GO

CREATE PROCEDURE [__mj].[spUpdateUserView]
    @ID int,
    @UserID int,
    @EntityID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @CategoryID int,
    @IsShared bit,
    @IsDefault bit,
    @GridState nvarchar(MAX),
    @FilterState nvarchar(MAX),
    @CustomFilterState bit,
    @SmartFilterEnabled bit,
    @SmartFilterPrompt nvarchar(MAX),
    @SmartFilterWhereClause nvarchar(MAX),
    @SmartFilterExplanation nvarchar(MAX),
    @WhereClause nvarchar(MAX),
    @CustomWhereClause bit,
    @SortState nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[UserView]
    SET 
        [UserID] = @UserID,
        [EntityID] = @EntityID,
        [Name] = @Name,
        [Description] = @Description,
        [CategoryID] = @CategoryID,
        [IsShared] = @IsShared,
        [IsDefault] = @IsDefault,
        [GridState] = @GridState,
        [FilterState] = @FilterState,
        [CustomFilterState] = @CustomFilterState,
        [SmartFilterEnabled] = @SmartFilterEnabled,
        [SmartFilterPrompt] = @SmartFilterPrompt,
        [SmartFilterWhereClause] = @SmartFilterWhereClause,
        [SmartFilterExplanation] = @SmartFilterExplanation,
        [WhereClause] = @WhereClause,
        [CustomWhereClause] = @CustomWhereClause,
        [SortState] = @SortState,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwUserViews] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateUserView] TO [cdp_Developer], [cdp_Integration], [cdp_UI]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Categories
-- Item: spUpdateUserViewCategory
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR UserViewCategory  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateUserViewCategory]
GO

CREATE PROCEDURE [__mj].[spUpdateUserViewCategory]
    @ID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @ParentID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[UserViewCategory]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [ParentID] = @ParentID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwUserViewCategories] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateUserViewCategory] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Runs
-- Item: spUpdateUserViewRun
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR UserViewRun  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateUserViewRun]
GO

CREATE PROCEDURE [__mj].[spUpdateUserViewRun]
    @ID int,
    @UserViewID int,
    @RunAt datetime,
    @RunByUserID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[UserViewRun]
    SET 
        [UserViewID] = @UserViewID,
        [RunAt] = @RunAt,
        [RunByUserID] = @RunByUserID
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwUserViewRuns] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateUserViewRun] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Run Details
-- Item: spUpdateUserViewRunDetail
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR UserViewRunDetail  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateUserViewRunDetail]
GO

CREATE PROCEDURE [__mj].[spUpdateUserViewRunDetail]
    @ID int,
    @UserViewRunID int,
    @RecordID nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[UserViewRunDetail]
    SET 
        [UserViewRunID] = @UserViewRunID,
        [RecordID] = @RecordID
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwUserViewRunDetails] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateUserViewRunDetail] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Vector Databases
-- Item: spUpdateVectorDatabase
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR VectorDatabase  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateVectorDatabase]
GO

CREATE PROCEDURE [__mj].[spUpdateVectorDatabase]
    @ID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @DefaultURL nvarchar(255),
    @ClassKey nvarchar(100)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[VectorDatabase]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [DefaultURL] = @DefaultURL,
        [ClassKey] = @ClassKey,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwVectorDatabases] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateVectorDatabase] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Vector Indexes
-- Item: spUpdateVectorIndex
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR VectorIndex  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateVectorIndex]
GO

CREATE PROCEDURE [__mj].[spUpdateVectorIndex]
    @ID int,
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @VectorDatabaseID int,
    @EmbeddingModelID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[VectorIndex]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [VectorDatabaseID] = @VectorDatabaseID,
        [EmbeddingModelID] = @EmbeddingModelID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwVectorIndexes] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateVectorIndex] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workflows
-- Item: spUpdateWorkflow
-- Generated: 3/10/2024, 9:38:15 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Workflow  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateWorkflow]
GO

CREATE PROCEDURE [__mj].[spUpdateWorkflow]
    @ID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @WorkflowEngineName nvarchar(100),
    @CompanyName nvarchar(50),
    @ExternalSystemRecordID nvarchar(100)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Workflow]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [WorkflowEngineName] = @WorkflowEngineName,
        [CompanyName] = @CompanyName,
        [ExternalSystemRecordID] = @ExternalSystemRecordID,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwWorkflows] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateWorkflow] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workflow Engines
-- Item: spUpdateWorkflowEngine
-- Generated: 3/10/2024, 9:38:16 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR WorkflowEngine  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateWorkflowEngine]
GO

CREATE PROCEDURE [__mj].[spUpdateWorkflowEngine]
    @ID int,
    @Name nvarchar(100),
    @Description nvarchar(MAX),
    @DriverPath nvarchar(500),
    @DriverClass nvarchar(100)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[WorkflowEngine]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [DriverPath] = @DriverPath,
        [DriverClass] = @DriverClass,
        [UpdatedAt] = GETDATE()
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwWorkflowEngines] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateWorkflowEngine] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workflow Runs
-- Item: spUpdateWorkflowRun
-- Generated: 3/10/2024, 9:38:15 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR WorkflowRun  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateWorkflowRun]
GO

CREATE PROCEDURE [__mj].[spUpdateWorkflowRun]
    @ID int,
    @WorkflowName nvarchar(100),
    @ExternalSystemRecordID nvarchar(100),
    @StartedAt datetime,
    @EndedAt datetime,
    @Status nchar(10),
    @Results nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[WorkflowRun]
    SET 
        [WorkflowName] = @WorkflowName,
        [ExternalSystemRecordID] = @ExternalSystemRecordID,
        [StartedAt] = @StartedAt,
        [EndedAt] = @EndedAt,
        [Status] = @Status,
        [Results] = @Results
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwWorkflowRuns] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateWorkflowRun] TO [cdp_Developer], [cdp_Integration]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workspaces
-- Item: spUpdateWorkspace
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR Workspace  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateWorkspace]
GO

CREATE PROCEDURE [__mj].[spUpdateWorkspace]
    @ID int,
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @UserID int
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[Workspace]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [UserID] = @UserID
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwWorkspaces] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateWorkspace] TO [cdp_UI]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workspace Items
-- Item: spUpdateWorkspaceItem
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR WorkspaceItem  
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [__mj].[spUpdateWorkspaceItem]
GO

CREATE PROCEDURE [__mj].[spUpdateWorkspaceItem]
    @ID int,
    @Name nvarchar(255),
    @Description nvarchar(MAX),
    @WorkSpaceID int,
    @ResourceTypeID int,
    @ResourceRecordID nvarchar(255),
    @Sequence int,
    @Configuration nvarchar(MAX)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE 
        [__mj].[WorkspaceItem]
    SET 
        [Name] = @Name,
        [Description] = @Description,
        [WorkSpaceID] = @WorkSpaceID,
        [ResourceTypeID] = @ResourceTypeID,
        [ResourceRecordID] = @ResourceRecordID,
        [Sequence] = @Sequence,
        [Configuration] = @Configuration
    WHERE 
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT * FROM [__mj].[vwWorkspaceItems] WHERE [ID] = @ID
END
GO
GRANT EXECUTE ON [__mj].[spUpdateWorkspaceItem] TO [cdp_UI]
    


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Actions
-- Item: vwAIActions
-- Generated: 3/10/2024, 9:38:17 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      AI Actions
-----               SCHEMA:      __mj
-----               BASE TABLE:  AIAction
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwAIActions]
GO

CREATE VIEW [__mj].[vwAIActions]
AS
SELECT 
    a.*,
    AIModel_DefaultModelID.[Name] AS [DefaultModel]
FROM
    [__mj].[AIAction] AS a
LEFT OUTER JOIN
    [__mj].[AIModel] AS AIModel_DefaultModelID
  ON
    [a].[DefaultModelID] = AIModel_DefaultModelID.[ID]
GO
GRANT SELECT ON [__mj].[vwAIActions] TO [cdp_UI], [cdp_Integration], [cdp_Developer]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Model Actions
-- Item: vwAIModelActions
-- Generated: 3/10/2024, 9:38:17 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      AI Model Actions
-----               SCHEMA:      __mj
-----               BASE TABLE:  AIModelAction
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwAIModelActions]
GO

CREATE VIEW [__mj].[vwAIModelActions]
AS
SELECT 
    a.*,
    AIModel_AIModelID.[Name] AS [AIModel],
    AIAction_AIActionID.[Name] AS [AIAction]
FROM
    [__mj].[AIModelAction] AS a
INNER JOIN
    [__mj].[AIModel] AS AIModel_AIModelID
  ON
    [a].[AIModelID] = AIModel_AIModelID.[ID]
INNER JOIN
    [__mj].[AIAction] AS AIAction_AIActionID
  ON
    [a].[AIActionID] = AIAction_AIActionID.[ID]
GO
GRANT SELECT ON [__mj].[vwAIModelActions] TO [cdp_UI], [cdp_Integration], [cdp_Developer]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Models
-- Item: vwAIModels
-- Generated: 3/10/2024, 9:38:17 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      AI Models
-----               SCHEMA:      __mj
-----               BASE TABLE:  AIModel
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwAIModels]
GO

CREATE VIEW [__mj].[vwAIModels]
AS
SELECT 
    a.*
FROM
    [__mj].[AIModel] AS a
GO
GRANT SELECT ON [__mj].[vwAIModels] TO [cdp_UI], [cdp_Integration], [cdp_Developer]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Model Types
-- Item: vwAIModelTypes
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      AI Model Types
-----               SCHEMA:      __mj
-----               BASE TABLE:  AIModelType
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwAIModelTypes]
GO

CREATE VIEW [__mj].[vwAIModelTypes]
AS
SELECT 
    a.*
FROM
    [__mj].[AIModelType] AS a
GO
GRANT SELECT ON [__mj].[vwAIModelTypes] TO [cdp_UI], [cdp_Integration], [cdp_Developer]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Applications
-- Item: vwApplications
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Applications
-----               SCHEMA:      __mj
-----               BASE TABLE:  Application
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwApplications]
GO

CREATE VIEW [__mj].[vwApplications]
AS
SELECT 
    a.*
FROM
    [__mj].[Application] AS a
GO
GRANT SELECT ON [__mj].[vwApplications] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Audit Logs
-- Item: vwAuditLogs
-- Generated: 3/10/2024, 9:38:16 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Audit Logs
-----               SCHEMA:      __mj
-----               BASE TABLE:  AuditLog
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwAuditLogs]
GO

CREATE VIEW [__mj].[vwAuditLogs]
AS
SELECT 
    a.*,
    User_UserID.[Name] AS [User],
    Entity_EntityID.[Name] AS [Entity]
FROM
    [__mj].[AuditLog] AS a
INNER JOIN
    [__mj].[User] AS User_UserID
  ON
    [a].[UserID] = User_UserID.[ID]
LEFT OUTER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [a].[EntityID] = Entity_EntityID.[ID]
GO
GRANT SELECT ON [__mj].[vwAuditLogs] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Audit Log Types
-- Item: vwAuditLogTypes
-- Generated: 3/10/2024, 9:38:16 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Audit Log Types
-----               SCHEMA:      __mj
-----               BASE TABLE:  AuditLogType
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwAuditLogTypes]
GO

CREATE VIEW [__mj].[vwAuditLogTypes]
AS
SELECT 
    a.*,
    AuditLogType_ParentID.[Name] AS [Parent]
FROM
    [__mj].[AuditLogType] AS a
LEFT OUTER JOIN
    [__mj].[AuditLogType] AS AuditLogType_ParentID
  ON
    [a].[ParentID] = AuditLogType_ParentID.[ID]
GO
GRANT SELECT ON [__mj].[vwAuditLogTypes] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Authorization Roles
-- Item: vwAuthorizationRoles
-- Generated: 3/10/2024, 9:38:16 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Authorization Roles
-----               SCHEMA:      __mj
-----               BASE TABLE:  AuthorizationRole
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwAuthorizationRoles]
GO

CREATE VIEW [__mj].[vwAuthorizationRoles]
AS
SELECT 
    a.*
FROM
    [__mj].[AuthorizationRole] AS a
GO
GRANT SELECT ON [__mj].[vwAuthorizationRoles] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Authorizations
-- Item: vwAuthorizations
-- Generated: 3/10/2024, 9:38:16 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Authorizations
-----               SCHEMA:      __mj
-----               BASE TABLE:  Authorization
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwAuthorizations]
GO

CREATE VIEW [__mj].[vwAuthorizations]
AS
SELECT 
    a.*
FROM
    [__mj].[Authorization] AS a
GO
GRANT SELECT ON [__mj].[vwAuthorizations] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Companies
-- Item: vwCompanies
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Companies
-----               SCHEMA:      __mj
-----               BASE TABLE:  Company
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwCompanies]
GO

CREATE VIEW [__mj].[vwCompanies]
AS
SELECT 
    c.*
FROM
    [__mj].[Company] AS c
GO
GRANT SELECT ON [__mj].[vwCompanies] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Record Maps
-- Item: vwCompanyIntegrationRecordMaps
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Company Integration Record Maps
-----               SCHEMA:      __mj
-----               BASE TABLE:  CompanyIntegrationRecordMap
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwCompanyIntegrationRecordMaps]
GO

CREATE VIEW [__mj].[vwCompanyIntegrationRecordMaps]
AS
SELECT 
    c.*,
    Entity_EntityID.[Name] AS [Entity]
FROM
    [__mj].[CompanyIntegrationRecordMap] AS c
INNER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [c].[EntityID] = Entity_EntityID.[ID]
GO
GRANT SELECT ON [__mj].[vwCompanyIntegrationRecordMaps] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Run API Logs
-- Item: vwCompanyIntegrationRunAPILogs
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Company Integration Run API Logs
-----               SCHEMA:      __mj
-----               BASE TABLE:  CompanyIntegrationRunAPILog
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwCompanyIntegrationRunAPILogs]
GO

CREATE VIEW [__mj].[vwCompanyIntegrationRunAPILogs]
AS
SELECT 
    c.*
FROM
    [__mj].[CompanyIntegrationRunAPILog] AS c
GO
GRANT SELECT ON [__mj].[vwCompanyIntegrationRunAPILogs] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Runs
-- Item: vwCompanyIntegrationRuns
-- Generated: 3/10/2024, 9:38:12 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Company Integration Runs
-----               SCHEMA:      __mj
-----               BASE TABLE:  CompanyIntegrationRun
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwCompanyIntegrationRuns]
GO

CREATE VIEW [__mj].[vwCompanyIntegrationRuns]
AS
SELECT 
    c.*,
    User_RunByUserID.[Name] AS [RunByUser]
FROM
    [__mj].[CompanyIntegrationRun] AS c
INNER JOIN
    [__mj].[User] AS User_RunByUserID
  ON
    [c].[RunByUserID] = User_RunByUserID.[ID]
GO
GRANT SELECT ON [__mj].[vwCompanyIntegrationRuns] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Conversation Details
-- Item: vwConversationDetails
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Conversation Details
-----               SCHEMA:      __mj
-----               BASE TABLE:  ConversationDetail
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwConversationDetails]
GO

CREATE VIEW [__mj].[vwConversationDetails]
AS
SELECT 
    c.*,
    Conversation_ConversationID.[Name] AS [Conversation]
FROM
    [__mj].[ConversationDetail] AS c
INNER JOIN
    [__mj].[Conversation] AS Conversation_ConversationID
  ON
    [c].[ConversationID] = Conversation_ConversationID.[ID]
GO
GRANT SELECT ON [__mj].[vwConversationDetails] TO [cdp_UI], [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Conversations
-- Item: vwConversations
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Conversations
-----               SCHEMA:      __mj
-----               BASE TABLE:  Conversation
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwConversations]
GO

CREATE VIEW [__mj].[vwConversations]
AS
SELECT 
    c.*,
    User_UserID.[Name] AS [User],
    Entity_LinkedEntityID.[Name] AS [LinkedEntity]
FROM
    [__mj].[Conversation] AS c
INNER JOIN
    [__mj].[User] AS User_UserID
  ON
    [c].[UserID] = User_UserID.[ID]
LEFT OUTER JOIN
    [__mj].[Entity] AS Entity_LinkedEntityID
  ON
    [c].[LinkedEntityID] = Entity_LinkedEntityID.[ID]
GO
GRANT SELECT ON [__mj].[vwConversations] TO [cdp_UI], [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dashboard Categories
-- Item: vwDashboardCategories
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Dashboard Categories
-----               SCHEMA:      __mj
-----               BASE TABLE:  DashboardCategory
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwDashboardCategories]
GO

CREATE VIEW [__mj].[vwDashboardCategories]
AS
SELECT 
    d.*,
    DashboardCategory_ParentID.[Name] AS [Parent]
FROM
    [__mj].[DashboardCategory] AS d
LEFT OUTER JOIN
    [__mj].[DashboardCategory] AS DashboardCategory_ParentID
  ON
    [d].[ParentID] = DashboardCategory_ParentID.[ID]
GO
GRANT SELECT ON [__mj].[vwDashboardCategories] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dashboards
-- Item: vwDashboards
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Dashboards
-----               SCHEMA:      __mj
-----               BASE TABLE:  Dashboard
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwDashboards]
GO

CREATE VIEW [__mj].[vwDashboards]
AS
SELECT 
    d.*,
    DashboardCategory_CategoryID.[Name] AS [Category],
    User_UserID.[Name] AS [User]
FROM
    [__mj].[Dashboard] AS d
LEFT OUTER JOIN
    [__mj].[DashboardCategory] AS DashboardCategory_CategoryID
  ON
    [d].[CategoryID] = DashboardCategory_CategoryID.[ID]
LEFT OUTER JOIN
    [__mj].[User] AS User_UserID
  ON
    [d].[UserID] = User_UserID.[ID]
GO
GRANT SELECT ON [__mj].[vwDashboards] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Data Context Items
-- Item: vwDataContextItems
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Data Context Items
-----               SCHEMA:      __mj
-----               BASE TABLE:  DataContextItem
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwDataContextItems]
GO

CREATE VIEW [__mj].[vwDataContextItems]
AS
SELECT 
    d.*,
    DataContext_DataContextID.[Name] AS [DataContext],
    UserView_ViewID.[Name] AS [View],
    Query_QueryID.[Name] AS [Query],
    Entity_EntityID.[Name] AS [Entity]
FROM
    [__mj].[DataContextItem] AS d
INNER JOIN
    [__mj].[DataContext] AS DataContext_DataContextID
  ON
    [d].[DataContextID] = DataContext_DataContextID.[ID]
LEFT OUTER JOIN
    [__mj].[UserView] AS UserView_ViewID
  ON
    [d].[ViewID] = UserView_ViewID.[ID]
LEFT OUTER JOIN
    [__mj].[Query] AS Query_QueryID
  ON
    [d].[QueryID] = Query_QueryID.[ID]
LEFT OUTER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [d].[EntityID] = Entity_EntityID.[ID]
GO
GRANT SELECT ON [__mj].[vwDataContextItems] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Data Contexts
-- Item: vwDataContexts
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Data Contexts
-----               SCHEMA:      __mj
-----               BASE TABLE:  DataContext
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwDataContexts]
GO

CREATE VIEW [__mj].[vwDataContexts]
AS
SELECT 
    d.*,
    User_UserID.[Name] AS [User]
FROM
    [__mj].[DataContext] AS d
INNER JOIN
    [__mj].[User] AS User_UserID
  ON
    [d].[UserID] = User_UserID.[ID]
GO
GRANT SELECT ON [__mj].[vwDataContexts] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dataset Items
-- Item: vwDatasetItems
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Dataset Items
-----               SCHEMA:      __mj
-----               BASE TABLE:  DatasetItem
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwDatasetItems]
GO

CREATE VIEW [__mj].[vwDatasetItems]
AS
SELECT 
    d.*,
    Entity_EntityID.[Name] AS [Entity]
FROM
    [__mj].[DatasetItem] AS d
INNER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [d].[EntityID] = Entity_EntityID.[ID]
GO
GRANT SELECT ON [__mj].[vwDatasetItems] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Datasets
-- Item: vwDatasets
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Datasets
-----               SCHEMA:      __mj
-----               BASE TABLE:  Dataset
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwDatasets]
GO

CREATE VIEW [__mj].[vwDatasets]
AS
SELECT 
    d.*
FROM
    [__mj].[Dataset] AS d
GO
GRANT SELECT ON [__mj].[vwDatasets] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employee Company Integrations
-- Item: vwEmployeeCompanyIntegrations
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Employee Company Integrations
-----               SCHEMA:      __mj
-----               BASE TABLE:  EmployeeCompanyIntegration
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwEmployeeCompanyIntegrations]
GO

CREATE VIEW [__mj].[vwEmployeeCompanyIntegrations]
AS
SELECT 
    e.*
FROM
    [__mj].[EmployeeCompanyIntegration] AS e
GO
GRANT SELECT ON [__mj].[vwEmployeeCompanyIntegrations] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employee Roles
-- Item: vwEmployeeRoles
-- Generated: 3/10/2024, 9:38:08 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Employee Roles
-----               SCHEMA:      __mj
-----               BASE TABLE:  EmployeeRole
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwEmployeeRoles]
GO

CREATE VIEW [__mj].[vwEmployeeRoles]
AS
SELECT 
    e.*,
    Role_RoleID.[Name] AS [Role]
FROM
    [__mj].[EmployeeRole] AS e
INNER JOIN
    [__mj].[Role] AS Role_RoleID
  ON
    [e].[RoleID] = Role_RoleID.[ID]
GO
GRANT SELECT ON [__mj].[vwEmployeeRoles] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employee Skills
-- Item: vwEmployeeSkills
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Employee Skills
-----               SCHEMA:      __mj
-----               BASE TABLE:  EmployeeSkill
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwEmployeeSkills]
GO

CREATE VIEW [__mj].[vwEmployeeSkills]
AS
SELECT 
    e.*,
    Skill_SkillID.[Name] AS [Skill]
FROM
    [__mj].[EmployeeSkill] AS e
INNER JOIN
    [__mj].[Skill] AS Skill_SkillID
  ON
    [e].[SkillID] = Skill_SkillID.[ID]
GO
GRANT SELECT ON [__mj].[vwEmployeeSkills] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity AI Actions
-- Item: vwEntityAIActions
-- Generated: 3/10/2024, 9:38:17 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Entity AI Actions
-----               SCHEMA:      __mj
-----               BASE TABLE:  EntityAIAction
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwEntityAIActions]
GO

CREATE VIEW [__mj].[vwEntityAIActions]
AS
SELECT 
    e.*,
    Entity_EntityID.[Name] AS [Entity],
    AIAction_AIActionID.[Name] AS [AIAction],
    AIModel_AIModelID.[Name] AS [AIModel],
    Entity_OutputEntityID.[Name] AS [OutputEntity]
FROM
    [__mj].[EntityAIAction] AS e
INNER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [e].[EntityID] = Entity_EntityID.[ID]
INNER JOIN
    [__mj].[AIAction] AS AIAction_AIActionID
  ON
    [e].[AIActionID] = AIAction_AIActionID.[ID]
LEFT OUTER JOIN
    [__mj].[AIModel] AS AIModel_AIModelID
  ON
    [e].[AIModelID] = AIModel_AIModelID.[ID]
LEFT OUTER JOIN
    [__mj].[Entity] AS Entity_OutputEntityID
  ON
    [e].[OutputEntityID] = Entity_OutputEntityID.[ID]
GO
GRANT SELECT ON [__mj].[vwEntityAIActions] TO [cdp_UI], [cdp_Integration], [cdp_Developer]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Document Runs
-- Item: vwEntityDocumentRuns
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Entity Document Runs
-----               SCHEMA:      __mj
-----               BASE TABLE:  EntityDocumentRun
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwEntityDocumentRuns]
GO

CREATE VIEW [__mj].[vwEntityDocumentRuns]
AS
SELECT 
    e.*,
    EntityDocument_EntityDocumentID.[Name] AS [EntityDocument]
FROM
    [__mj].[EntityDocumentRun] AS e
INNER JOIN
    [__mj].[EntityDocument] AS EntityDocument_EntityDocumentID
  ON
    [e].[EntityDocumentID] = EntityDocument_EntityDocumentID.[ID]
GO
GRANT SELECT ON [__mj].[vwEntityDocumentRuns] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Documents
-- Item: vwEntityDocuments
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Entity Documents
-----               SCHEMA:      __mj
-----               BASE TABLE:  EntityDocument
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwEntityDocuments]
GO

CREATE VIEW [__mj].[vwEntityDocuments]
AS
SELECT 
    e.*,
    Entity_EntityID.[Name] AS [Entity],
    EntityDocumentType_TypeID.[Name] AS [Type]
FROM
    [__mj].[EntityDocument] AS e
INNER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [e].[EntityID] = Entity_EntityID.[ID]
INNER JOIN
    [__mj].[EntityDocumentType] AS EntityDocumentType_TypeID
  ON
    [e].[TypeID] = EntityDocumentType_TypeID.[ID]
GO
GRANT SELECT ON [__mj].[vwEntityDocuments] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Document Types
-- Item: vwEntityDocumentTypes
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Entity Document Types
-----               SCHEMA:      __mj
-----               BASE TABLE:  EntityDocumentType
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwEntityDocumentTypes]
GO

CREATE VIEW [__mj].[vwEntityDocumentTypes]
AS
SELECT 
    e.*
FROM
    [__mj].[EntityDocumentType] AS e
GO
GRANT SELECT ON [__mj].[vwEntityDocumentTypes] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Field Values
-- Item: vwEntityFieldValues
-- Generated: 3/10/2024, 9:38:17 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Entity Field Values
-----               SCHEMA:      __mj
-----               BASE TABLE:  EntityFieldValue
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwEntityFieldValues]
GO

CREATE VIEW [__mj].[vwEntityFieldValues]
AS
SELECT 
    e.*,
    EntityField_EntityID.[Name] AS [Entity]
FROM
    [__mj].[EntityFieldValue] AS e
INNER JOIN
    [__mj].[EntityField] AS EntityField_EntityID
  ON
    [e].[EntityID] = EntityField_EntityID.[EntityID]
GO
GRANT SELECT ON [__mj].[vwEntityFieldValues] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Record Documents
-- Item: vwEntityRecordDocuments
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Entity Record Documents
-----               SCHEMA:      __mj
-----               BASE TABLE:  EntityRecordDocument
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwEntityRecordDocuments]
GO

CREATE VIEW [__mj].[vwEntityRecordDocuments]
AS
SELECT 
    e.*
FROM
    [__mj].[EntityRecordDocument] AS e
GO
GRANT SELECT ON [__mj].[vwEntityRecordDocuments] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Error Logs
-- Item: vwErrorLogs
-- Generated: 3/10/2024, 9:38:12 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Error Logs
-----               SCHEMA:      __mj
-----               BASE TABLE:  ErrorLog
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwErrorLogs]
GO

CREATE VIEW [__mj].[vwErrorLogs]
AS
SELECT 
    e.*
FROM
    [__mj].[ErrorLog] AS e
GO
GRANT SELECT ON [__mj].[vwErrorLogs] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Integrations
-- Item: vwIntegrations
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Integrations
-----               SCHEMA:      __mj
-----               BASE TABLE:  Integration
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwIntegrations]
GO

CREATE VIEW [__mj].[vwIntegrations]
AS
SELECT 
    i.*
FROM
    [__mj].[Integration] AS i
GO
GRANT SELECT ON [__mj].[vwIntegrations] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: List Details
-- Item: vwListDetails
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      List Details
-----               SCHEMA:      __mj
-----               BASE TABLE:  ListDetail
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwListDetails]
GO

CREATE VIEW [__mj].[vwListDetails]
AS
SELECT 
    l.*
FROM
    [__mj].[ListDetail] AS l
GO
GRANT SELECT ON [__mj].[vwListDetails] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Lists
-- Item: vwLists
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Lists
-----               SCHEMA:      __mj
-----               BASE TABLE:  List
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwLists]
GO

CREATE VIEW [__mj].[vwLists]
AS
SELECT 
    l.*,
    Entity_EntityID.[Name] AS [Entity],
    User_UserID.[Name] AS [User]
FROM
    [__mj].[List] AS l
LEFT OUTER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [l].[EntityID] = Entity_EntityID.[ID]
INNER JOIN
    [__mj].[User] AS User_UserID
  ON
    [l].[UserID] = User_UserID.[ID]
GO
GRANT SELECT ON [__mj].[vwLists] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Output Delivery Types
-- Item: vwOutputDeliveryTypes
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Output Delivery Types
-----               SCHEMA:      __mj
-----               BASE TABLE:  OutputDeliveryType
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwOutputDeliveryTypes]
GO

CREATE VIEW [__mj].[vwOutputDeliveryTypes]
AS
SELECT 
    o.*
FROM
    [__mj].[OutputDeliveryType] AS o
GO
GRANT SELECT ON [__mj].[vwOutputDeliveryTypes] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Output Format Types
-- Item: vwOutputFormatTypes
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Output Format Types
-----               SCHEMA:      __mj
-----               BASE TABLE:  OutputFormatType
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwOutputFormatTypes]
GO

CREATE VIEW [__mj].[vwOutputFormatTypes]
AS
SELECT 
    o.*
FROM
    [__mj].[OutputFormatType] AS o
GO
GRANT SELECT ON [__mj].[vwOutputFormatTypes] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Output Trigger Types
-- Item: vwOutputTriggerTypes
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Output Trigger Types
-----               SCHEMA:      __mj
-----               BASE TABLE:  OutputTriggerType
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwOutputTriggerTypes]
GO

CREATE VIEW [__mj].[vwOutputTriggerTypes]
AS
SELECT 
    o.*
FROM
    [__mj].[OutputTriggerType] AS o
GO
GRANT SELECT ON [__mj].[vwOutputTriggerTypes] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queries
-- Item: vwQueries
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Queries
-----               SCHEMA:      __mj
-----               BASE TABLE:  Query
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwQueries]
GO

CREATE VIEW [__mj].[vwQueries]
AS
SELECT 
    q.*,
    QueryCategory_CategoryID.[Name] AS [Category]
FROM
    [__mj].[Query] AS q
INNER JOIN
    [__mj].[QueryCategory] AS QueryCategory_CategoryID
  ON
    [q].[CategoryID] = QueryCategory_CategoryID.[ID]
GO
GRANT SELECT ON [__mj].[vwQueries] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Categories
-- Item: vwQueryCategories
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Query Categories
-----               SCHEMA:      __mj
-----               BASE TABLE:  QueryCategory
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwQueryCategories]
GO

CREATE VIEW [__mj].[vwQueryCategories]
AS
SELECT 
    q.*,
    QueryCategory_ParentID.[Name] AS [Parent]
FROM
    [__mj].[QueryCategory] AS q
LEFT OUTER JOIN
    [__mj].[QueryCategory] AS QueryCategory_ParentID
  ON
    [q].[ParentID] = QueryCategory_ParentID.[ID]
GO
GRANT SELECT ON [__mj].[vwQueryCategories] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Fields
-- Item: vwQueryFields
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Query Fields
-----               SCHEMA:      __mj
-----               BASE TABLE:  QueryField
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwQueryFields]
GO

CREATE VIEW [__mj].[vwQueryFields]
AS
SELECT 
    q.*,
    Query_QueryID.[Name] AS [Query],
    Entity_SourceEntityID.[Name] AS [SourceEntity]
FROM
    [__mj].[QueryField] AS q
INNER JOIN
    [__mj].[Query] AS Query_QueryID
  ON
    [q].[QueryID] = Query_QueryID.[ID]
LEFT OUTER JOIN
    [__mj].[Entity] AS Entity_SourceEntityID
  ON
    [q].[SourceEntityID] = Entity_SourceEntityID.[ID]
GO
GRANT SELECT ON [__mj].[vwQueryFields] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Permissions
-- Item: vwQueryPermissions
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Query Permissions
-----               SCHEMA:      __mj
-----               BASE TABLE:  QueryPermission
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwQueryPermissions]
GO

CREATE VIEW [__mj].[vwQueryPermissions]
AS
SELECT 
    q.*
FROM
    [__mj].[QueryPermission] AS q
GO
GRANT SELECT ON [__mj].[vwQueryPermissions] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queues
-- Item: vwQueues
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Queues
-----               SCHEMA:      __mj
-----               BASE TABLE:  Queue
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwQueues]
GO

CREATE VIEW [__mj].[vwQueues]
AS
SELECT 
    q.*,
    QueueType_QueueTypeID.[Name] AS [QueueType]
FROM
    [__mj].[Queue] AS q
INNER JOIN
    [__mj].[QueueType] AS QueueType_QueueTypeID
  ON
    [q].[QueueTypeID] = QueueType_QueueTypeID.[ID]
GO
GRANT SELECT ON [__mj].[vwQueues] TO [cdp_Developer], [cdp_Developer], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queue Tasks
-- Item: vwQueueTasks
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Queue Tasks
-----               SCHEMA:      __mj
-----               BASE TABLE:  QueueTask
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwQueueTasks]
GO

CREATE VIEW [__mj].[vwQueueTasks]
AS
SELECT 
    q.*
FROM
    [__mj].[QueueTask] AS q
GO
GRANT SELECT ON [__mj].[vwQueueTasks] TO [cdp_Developer], [cdp_Developer], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queue Types
-- Item: vwQueueTypes
-- Generated: 3/10/2024, 9:38:18 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Queue Types
-----               SCHEMA:      __mj
-----               BASE TABLE:  QueueType
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwQueueTypes]
GO

CREATE VIEW [__mj].[vwQueueTypes]
AS
SELECT 
    q.*
FROM
    [__mj].[QueueType] AS q
GO
GRANT SELECT ON [__mj].[vwQueueTypes] TO [cdp_Developer]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Record Changes
-- Item: vwRecordChanges
-- Generated: 3/10/2024, 9:38:15 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Record Changes
-----               SCHEMA:      __mj
-----               BASE TABLE:  RecordChange
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwRecordChanges]
GO

CREATE VIEW [__mj].[vwRecordChanges]
AS
SELECT 
    r.*,
    Entity_EntityID.[Name] AS [Entity],
    User_UserID.[Name] AS [User]
FROM
    [__mj].[RecordChange] AS r
INNER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [r].[EntityID] = Entity_EntityID.[ID]
INNER JOIN
    [__mj].[User] AS User_UserID
  ON
    [r].[UserID] = User_UserID.[ID]
GO
GRANT SELECT ON [__mj].[vwRecordChanges] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Record Merge Deletion Logs
-- Item: vwRecordMergeDeletionLogs
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Record Merge Deletion Logs
-----               SCHEMA:      __mj
-----               BASE TABLE:  RecordMergeDeletionLog
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwRecordMergeDeletionLogs]
GO

CREATE VIEW [__mj].[vwRecordMergeDeletionLogs]
AS
SELECT 
    r.*
FROM
    [__mj].[RecordMergeDeletionLog] AS r
GO
GRANT SELECT ON [__mj].[vwRecordMergeDeletionLogs] TO [cdp_UI], [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Record Merge Logs
-- Item: vwRecordMergeLogs
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Record Merge Logs
-----               SCHEMA:      __mj
-----               BASE TABLE:  RecordMergeLog
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwRecordMergeLogs]
GO

CREATE VIEW [__mj].[vwRecordMergeLogs]
AS
SELECT 
    r.*,
    Entity_EntityID.[Name] AS [Entity],
    User_InitiatedByUserID.[Name] AS [InitiatedByUser]
FROM
    [__mj].[RecordMergeLog] AS r
INNER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [r].[EntityID] = Entity_EntityID.[ID]
INNER JOIN
    [__mj].[User] AS User_InitiatedByUserID
  ON
    [r].[InitiatedByUserID] = User_InitiatedByUserID.[ID]
GO
GRANT SELECT ON [__mj].[vwRecordMergeLogs] TO [cdp_UI], [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Report Categories
-- Item: vwReportCategories
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Report Categories
-----               SCHEMA:      __mj
-----               BASE TABLE:  ReportCategory
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwReportCategories]
GO

CREATE VIEW [__mj].[vwReportCategories]
AS
SELECT 
    r.*,
    ReportCategory_ParentID.[Name] AS [Parent]
FROM
    [__mj].[ReportCategory] AS r
INNER JOIN
    [__mj].[ReportCategory] AS ReportCategory_ParentID
  ON
    [r].[ParentID] = ReportCategory_ParentID.[ID]
GO
GRANT SELECT ON [__mj].[vwReportCategories] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Reports
-- Item: vwReports
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Reports
-----               SCHEMA:      __mj
-----               BASE TABLE:  Report
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwReports]
GO

CREATE VIEW [__mj].[vwReports]
AS
SELECT 
    r.*,
    ReportCategory_CategoryID.[Name] AS [Category],
    User_UserID.[Name] AS [User],
    Conversation_ConversationID.[Name] AS [Conversation],
    DataContext_DataContextID.[Name] AS [DataContext],
    OutputTriggerType_OutputTriggerTypeID.[Name] AS [OutputTriggerType],
    OutputFormatType_OutputFormatTypeID.[Name] AS [OutputFormatType],
    OutputDeliveryType_OutputDeliveryTypeID.[Name] AS [OutputDeliveryType],
    OutputDeliveryType_OutputEventID.[Name] AS [OutputEvent]
FROM
    [__mj].[Report] AS r
LEFT OUTER JOIN
    [__mj].[ReportCategory] AS ReportCategory_CategoryID
  ON
    [r].[CategoryID] = ReportCategory_CategoryID.[ID]
INNER JOIN
    [__mj].[User] AS User_UserID
  ON
    [r].[UserID] = User_UserID.[ID]
LEFT OUTER JOIN
    [__mj].[Conversation] AS Conversation_ConversationID
  ON
    [r].[ConversationID] = Conversation_ConversationID.[ID]
LEFT OUTER JOIN
    [__mj].[DataContext] AS DataContext_DataContextID
  ON
    [r].[DataContextID] = DataContext_DataContextID.[ID]
LEFT OUTER JOIN
    [__mj].[OutputTriggerType] AS OutputTriggerType_OutputTriggerTypeID
  ON
    [r].[OutputTriggerTypeID] = OutputTriggerType_OutputTriggerTypeID.[ID]
LEFT OUTER JOIN
    [__mj].[OutputFormatType] AS OutputFormatType_OutputFormatTypeID
  ON
    [r].[OutputFormatTypeID] = OutputFormatType_OutputFormatTypeID.[ID]
LEFT OUTER JOIN
    [__mj].[OutputDeliveryType] AS OutputDeliveryType_OutputDeliveryTypeID
  ON
    [r].[OutputDeliveryTypeID] = OutputDeliveryType_OutputDeliveryTypeID.[ID]
LEFT OUTER JOIN
    [__mj].[OutputDeliveryType] AS OutputDeliveryType_OutputEventID
  ON
    [r].[OutputEventID] = OutputDeliveryType_OutputEventID.[ID]
GO
GRANT SELECT ON [__mj].[vwReports] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Report Snapshots
-- Item: vwReportSnapshots
-- Generated: 3/10/2024, 9:38:19 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Report Snapshots
-----               SCHEMA:      __mj
-----               BASE TABLE:  ReportSnapshot
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwReportSnapshots]
GO

CREATE VIEW [__mj].[vwReportSnapshots]
AS
SELECT 
    r.*,
    Report_ReportID.[Name] AS [Report],
    User_UserID.[Name] AS [User]
FROM
    [__mj].[ReportSnapshot] AS r
INNER JOIN
    [__mj].[Report] AS Report_ReportID
  ON
    [r].[ReportID] = Report_ReportID.[ID]
LEFT OUTER JOIN
    [__mj].[User] AS User_UserID
  ON
    [r].[UserID] = User_UserID.[ID]
GO
GRANT SELECT ON [__mj].[vwReportSnapshots] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Resource Types
-- Item: vwResourceTypes
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Resource Types
-----               SCHEMA:      __mj
-----               BASE TABLE:  ResourceType
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwResourceTypes]
GO

CREATE VIEW [__mj].[vwResourceTypes]
AS
SELECT 
    r.*,
    Entity_EntityID.[Name] AS [Entity]
FROM
    [__mj].[ResourceType] AS r
LEFT OUTER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [r].[EntityID] = Entity_EntityID.[ID]
GO
GRANT SELECT ON [__mj].[vwResourceTypes] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Roles
-- Item: vwRoles
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Roles
-----               SCHEMA:      __mj
-----               BASE TABLE:  Role
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwRoles]
GO

CREATE VIEW [__mj].[vwRoles]
AS
SELECT 
    r.*
FROM
    [__mj].[Role] AS r
GO
GRANT SELECT ON [__mj].[vwRoles] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Row Level Security Filters
-- Item: vwRowLevelSecurityFilters
-- Generated: 3/10/2024, 9:38:16 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Row Level Security Filters
-----               SCHEMA:      __mj
-----               BASE TABLE:  RowLevelSecurityFilter
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwRowLevelSecurityFilters]
GO

CREATE VIEW [__mj].[vwRowLevelSecurityFilters]
AS
SELECT 
    r.*
FROM
    [__mj].[RowLevelSecurityFilter] AS r
GO
GRANT SELECT ON [__mj].[vwRowLevelSecurityFilters] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Schema Info
-- Item: vwSchemaInfos
-- Generated: 3/10/2024, 9:38:22 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Schema Info
-----               SCHEMA:      __mj
-----               BASE TABLE:  SchemaInfo
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwSchemaInfos]
GO

CREATE VIEW [__mj].[vwSchemaInfos]
AS
SELECT 
    s.*
FROM
    [__mj].[SchemaInfo] AS s
GO



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Skills
-- Item: vwSkills
-- Generated: 3/10/2024, 9:38:11 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Skills
-----               SCHEMA:      __mj
-----               BASE TABLE:  Skill
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwSkills]
GO

CREATE VIEW [__mj].[vwSkills]
AS
SELECT 
    s.*,
    Skill_ParentID.[Name] AS [Parent]
FROM
    [__mj].[Skill] AS s
LEFT OUTER JOIN
    [__mj].[Skill] AS Skill_ParentID
  ON
    [s].[ParentID] = Skill_ParentID.[ID]
GO
GRANT SELECT ON [__mj].[vwSkills] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Tagged Items
-- Item: vwTaggedItems
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Tagged Items
-----               SCHEMA:      __mj
-----               BASE TABLE:  TaggedItem
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwTaggedItems]
GO

CREATE VIEW [__mj].[vwTaggedItems]
AS
SELECT 
    t.*,
    Tag_TagID.[Name] AS [Tag],
    Entity_EntityID.[Name] AS [Entity]
FROM
    [__mj].[TaggedItem] AS t
INNER JOIN
    [__mj].[Tag] AS Tag_TagID
  ON
    [t].[TagID] = Tag_TagID.[ID]
INNER JOIN
    [__mj].[Entity] AS Entity_EntityID
  ON
    [t].[EntityID] = Entity_EntityID.[ID]
GO
GRANT SELECT ON [__mj].[vwTaggedItems] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Tags
-- Item: vwTags
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Tags
-----               SCHEMA:      __mj
-----               BASE TABLE:  Tag
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwTags]
GO

CREATE VIEW [__mj].[vwTags]
AS
SELECT 
    t.*,
    Tag_ParentID.[Name] AS [Parent]
FROM
    [__mj].[Tag] AS t
LEFT OUTER JOIN
    [__mj].[Tag] AS Tag_ParentID
  ON
    [t].[ParentID] = Tag_ParentID.[ID]
GO
GRANT SELECT ON [__mj].[vwTags] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Applications
-- Item: vwUserApplications
-- Generated: 3/10/2024, 9:38:13 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      User Applications
-----               SCHEMA:      __mj
-----               BASE TABLE:  UserApplication
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwUserApplications]
GO

CREATE VIEW [__mj].[vwUserApplications]
AS
SELECT 
    u.*,
    User_UserID.[Name] AS [User],
    Application_ApplicationID.[Name] AS [Application]
FROM
    [__mj].[UserApplication] AS u
INNER JOIN
    [__mj].[User] AS User_UserID
  ON
    [u].[UserID] = User_UserID.[ID]
INNER JOIN
    [__mj].[Application] AS Application_ApplicationID
  ON
    [u].[ApplicationID] = Application_ApplicationID.[ID]
GO
GRANT SELECT ON [__mj].[vwUserApplications] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Notifications
-- Item: vwUserNotifications
-- Generated: 3/10/2024, 9:38:21 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      User Notifications
-----               SCHEMA:      __mj
-----               BASE TABLE:  UserNotification
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwUserNotifications]
GO

CREATE VIEW [__mj].[vwUserNotifications]
AS
SELECT 
    u.*,
    User_UserID.[Name] AS [User]
FROM
    [__mj].[UserNotification] AS u
INNER JOIN
    [__mj].[User] AS User_UserID
  ON
    [u].[UserID] = User_UserID.[ID]
GO
GRANT SELECT ON [__mj].[vwUserNotifications] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Roles
-- Item: vwUserRoles
-- Generated: 3/10/2024, 9:38:15 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      User Roles
-----               SCHEMA:      __mj
-----               BASE TABLE:  UserRole
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwUserRoles]
GO

CREATE VIEW [__mj].[vwUserRoles]
AS
SELECT 
    u.*,
    User_UserID.[Name] AS [User]
FROM
    [__mj].[UserRole] AS u
INNER JOIN
    [__mj].[User] AS User_UserID
  ON
    [u].[UserID] = User_UserID.[ID]
GO
GRANT SELECT ON [__mj].[vwUserRoles] TO [cdp_UI], [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Categories
-- Item: vwUserViewCategories
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      User View Categories
-----               SCHEMA:      __mj
-----               BASE TABLE:  UserViewCategory
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwUserViewCategories]
GO

CREATE VIEW [__mj].[vwUserViewCategories]
AS
SELECT 
    u.*,
    UserViewCategory_ParentID.[Name] AS [Parent]
FROM
    [__mj].[UserViewCategory] AS u
LEFT OUTER JOIN
    [__mj].[UserViewCategory] AS UserViewCategory_ParentID
  ON
    [u].[ParentID] = UserViewCategory_ParentID.[ID]
GO
GRANT SELECT ON [__mj].[vwUserViewCategories] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Runs
-- Item: vwUserViewRuns
-- Generated: 3/10/2024, 9:38:14 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      User View Runs
-----               SCHEMA:      __mj
-----               BASE TABLE:  UserViewRun
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwUserViewRuns]
GO

CREATE VIEW [__mj].[vwUserViewRuns]
AS
SELECT 
    u.*,
    UserView_UserViewID.[Name] AS [UserView],
    User_RunByUserID.[Name] AS [RunByUser]
FROM
    [__mj].[UserViewRun] AS u
INNER JOIN
    [__mj].[UserView] AS UserView_UserViewID
  ON
    [u].[UserViewID] = UserView_UserViewID.[ID]
INNER JOIN
    [__mj].[User] AS User_RunByUserID
  ON
    [u].[RunByUserID] = User_RunByUserID.[ID]
GO
GRANT SELECT ON [__mj].[vwUserViewRuns] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Vector Databases
-- Item: vwVectorDatabases
-- Generated: 3/10/2024, 9:38:24 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Vector Databases
-----               SCHEMA:      __mj
-----               BASE TABLE:  VectorDatabase
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwVectorDatabases]
GO

CREATE VIEW [__mj].[vwVectorDatabases]
AS
SELECT 
    v.*
FROM
    [__mj].[VectorDatabase] AS v
GO
GRANT SELECT ON [__mj].[vwVectorDatabases] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Vector Indexes
-- Item: vwVectorIndexes
-- Generated: 3/10/2024, 9:38:23 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Vector Indexes
-----               SCHEMA:      __mj
-----               BASE TABLE:  VectorIndex
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwVectorIndexes]
GO

CREATE VIEW [__mj].[vwVectorIndexes]
AS
SELECT 
    v.*,
    VectorDatabase_VectorDatabaseID.[Name] AS [VectorDatabase],
    AIModel_EmbeddingModelID.[Name] AS [EmbeddingModel]
FROM
    [__mj].[VectorIndex] AS v
INNER JOIN
    [__mj].[VectorDatabase] AS VectorDatabase_VectorDatabaseID
  ON
    [v].[VectorDatabaseID] = VectorDatabase_VectorDatabaseID.[ID]
INNER JOIN
    [__mj].[AIModel] AS AIModel_EmbeddingModelID
  ON
    [v].[EmbeddingModelID] = AIModel_EmbeddingModelID.[ID]
GO
GRANT SELECT ON [__mj].[vwVectorIndexes] TO [cdp_UI], [cdp_Developer], [cdp_Integration]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workflow Engines
-- Item: vwWorkflowEngines
-- Generated: 3/10/2024, 9:38:15 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Workflow Engines
-----               SCHEMA:      __mj
-----               BASE TABLE:  WorkflowEngine
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwWorkflowEngines]
GO

CREATE VIEW [__mj].[vwWorkflowEngines]
AS
SELECT 
    w.*
FROM
    [__mj].[WorkflowEngine] AS w
GO
GRANT SELECT ON [__mj].[vwWorkflowEngines] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workflows
-- Item: vwWorkflows
-- Generated: 3/10/2024, 9:38:15 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Workflows
-----               SCHEMA:      __mj
-----               BASE TABLE:  Workflow
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwWorkflows]
GO

CREATE VIEW [__mj].[vwWorkflows]
AS
SELECT 
    w.*
FROM
    [__mj].[Workflow] AS w
GO
GRANT SELECT ON [__mj].[vwWorkflows] TO [cdp_Developer], [cdp_Integration], [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workspace Items
-- Item: vwWorkspaceItems
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Workspace Items
-----               SCHEMA:      __mj
-----               BASE TABLE:  WorkspaceItem
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwWorkspaceItems]
GO

CREATE VIEW [__mj].[vwWorkspaceItems]
AS
SELECT 
    w.*,
    Workspace_WorkSpaceID.[Name] AS [WorkSpace],
    ResourceType_ResourceTypeID.[Name] AS [ResourceType]
FROM
    [__mj].[WorkspaceItem] AS w
INNER JOIN
    [__mj].[Workspace] AS Workspace_WorkSpaceID
  ON
    [w].[WorkSpaceID] = Workspace_WorkSpaceID.[ID]
INNER JOIN
    [__mj].[ResourceType] AS ResourceType_ResourceTypeID
  ON
    [w].[ResourceTypeID] = ResourceType_ResourceTypeID.[ID]
GO
GRANT SELECT ON [__mj].[vwWorkspaceItems] TO [cdp_UI]



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workspaces
-- Item: vwWorkspaces
-- Generated: 3/10/2024, 9:38:20 AM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- BASE VIEW FOR ENTITY:      Workspaces
-----               SCHEMA:      __mj
-----               BASE TABLE:  Workspace
-----               PRIMARY KEY: ID
------------------------------------------------------------
DROP VIEW IF EXISTS [__mj].[vwWorkspaces]
GO

CREATE VIEW [__mj].[vwWorkspaces]
AS
SELECT 
    w.*,
    User_UserID.[Name] AS [User]
FROM
    [__mj].[Workspace] AS w
INNER JOIN
    [__mj].[User] AS User_UserID
  ON
    [w].[UserID] = User_UserID.[ID]
GO
GRANT SELECT ON [__mj].[vwWorkspaces] TO [cdp_UI]




GRANT EXECUTE ON [__mj].[spCreateApplicationEntity] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateAuditLog] TO [cdp_Developer], [cdp_Integration], [cdp_UI]





GRANT EXECUTE ON [__mj].[spCreateCompany] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateCompanyIntegrationRecordMap] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateConversation] TO [cdp_UI], [cdp_UI], [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateConversationDetail] TO [cdp_UI], [cdp_UI], [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateDashboard] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spCreateDashboardCategory] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateDataContext] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateDataContextItem] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateEmployee] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateEntity] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateEntityDocument] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateEntityDocumentRun] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateEntityDocumentType] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateEntityField] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateEntityPermission] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateEntityRecordDocument] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateEntityRelationship] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateList] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateListDetail] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateQuery] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateQueryCategory] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateQueryField] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateQueryPermission] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateQueue] TO [cdp_Developer], [cdp_Developer], [cdp_UI]





GRANT EXECUTE ON [__mj].[spCreateQueueTask] TO [cdp_Developer], [cdp_Developer], [cdp_UI]





GRANT EXECUTE ON [__mj].[spCreateRecordChange] TO [cdp_UI], [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateRecordMergeDeletionLog] TO [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateRecordMergeLog] TO [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateReport] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spCreateReportCategory] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateReportSnapshot] TO [cdp_UI]










GRANT EXECUTE ON [__mj].[spCreateUser] TO [cdp_Developer], [cdp_Integration], [cdp_UI]





GRANT EXECUTE ON [__mj].[spCreateUserApplicationEntity] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateUserFavorite] TO [cdp_Developer], [cdp_Integration], [cdp_UI]





GRANT EXECUTE ON [__mj].[spCreateUserNotification] TO [cdp_UI], [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateUserRole] TO [cdp_UI], [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateUserView] TO [cdp_Developer], [cdp_Integration], [cdp_UI]





GRANT EXECUTE ON [__mj].[spCreateUserViewCategory] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateUserViewRun] TO [cdp_Developer], [cdp_Integration], [cdp_UI]





GRANT EXECUTE ON [__mj].[spCreateUserViewRunDetail] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateVectorDatabase] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateVectorIndex] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spCreateWorkspace] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spCreateWorkspaceItem] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spDeleteApplicationEntity] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spDeleteCompany] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spDeleteConversation] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spDeleteConversationDetail] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spDeleteDashboard] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spDeleteEmployee] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spDeleteEntity] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spDeleteEntityField] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spDeleteEntityPermission] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spDeleteEntityRelationship] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spDeleteList] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spDeleteListDetail] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spDeleteReport] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spDeleteReportSnapshot] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spDeleteUserApplicationEntity] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spDeleteUserFavorite] TO [cdp_Developer], [cdp_Integration], [cdp_UI]





GRANT EXECUTE ON [__mj].[spDeleteUserView] TO [cdp_Developer], [cdp_Integration], [cdp_UI]





GRANT EXECUTE ON [__mj].[spDeleteWorkspace] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spDeleteWorkspaceItem] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spUpdateAIAction] TO [cdp_Integration], [cdp_Developer]





GRANT EXECUTE ON [__mj].[spUpdateAIModel] TO [cdp_Integration], [cdp_Developer]





GRANT EXECUTE ON [__mj].[spUpdateAIModelAction] TO [cdp_Integration], [cdp_Developer]





GRANT EXECUTE ON [__mj].[spUpdateAIModelType] TO [cdp_Integration], [cdp_Developer]





GRANT EXECUTE ON [__mj].[spUpdateApplication] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateApplicationEntity] TO [cdp_Developer], [cdp_Integration]










GRANT EXECUTE ON [__mj].[spUpdateCompany] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateCompanyIntegration] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateCompanyIntegrationRecordMap] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateCompanyIntegrationRun] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateCompanyIntegrationRunAPILog] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateCompanyIntegrationRunDetail] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateConversation] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spUpdateConversationDetail] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spUpdateDashboard] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spUpdateDashboardCategory] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateDataContext] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateDataContextItem] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEmployee] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEmployeeCompanyIntegration] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEmployeeRole] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEmployeeSkill] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEntity] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEntityAIAction] TO [cdp_Integration], [cdp_Developer]





GRANT EXECUTE ON [__mj].[spUpdateEntityDocument] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEntityDocumentRun] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEntityDocumentType] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEntityField] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEntityPermission] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEntityRecordDocument] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateEntityRelationship] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateErrorLog] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateIntegration] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateIntegrationURLFormat] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateList] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateListDetail] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateQuery] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateQueryCategory] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateQueryField] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateQueryPermission] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateQueue] TO [cdp_Developer], [cdp_Developer]





GRANT EXECUTE ON [__mj].[spUpdateQueueTask] TO [cdp_Developer], [cdp_Developer]





GRANT EXECUTE ON [__mj].[spUpdateRecordMergeDeletionLog] TO [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateRecordMergeLog] TO [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateReport] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spUpdateReportCategory] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateReportSnapshot] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spUpdateRole] TO [cdp_Developer], [cdp_Integration]










GRANT EXECUTE ON [__mj].[spUpdateUser] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateUserApplication] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateUserApplicationEntity] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateUserFavorite] TO [cdp_Developer], [cdp_Integration], [cdp_UI]





GRANT EXECUTE ON [__mj].[spUpdateUserNotification] TO [cdp_UI], [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateUserRecordLog] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateUserView] TO [cdp_Developer], [cdp_Integration], [cdp_UI]





GRANT EXECUTE ON [__mj].[spUpdateUserViewCategory] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateUserViewRun] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateUserViewRunDetail] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateVectorDatabase] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateVectorIndex] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateWorkflow] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateWorkflowEngine] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateWorkflowRun] TO [cdp_Developer], [cdp_Integration]





GRANT EXECUTE ON [__mj].[spUpdateWorkspace] TO [cdp_UI]





GRANT EXECUTE ON [__mj].[spUpdateWorkspaceItem] TO [cdp_UI]




-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Actions
-- Item: Permissions for vwAIActions
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwAIActions] TO [cdp_UI], [cdp_Integration], [cdp_Developer]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Model Actions
-- Item: Permissions for vwAIModelActions
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwAIModelActions] TO [cdp_UI], [cdp_Integration], [cdp_Developer]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Models
-- Item: Permissions for vwAIModels
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwAIModels] TO [cdp_UI], [cdp_Integration], [cdp_Developer]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: AI Model Types
-- Item: Permissions for vwAIModelTypes
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwAIModelTypes] TO [cdp_UI], [cdp_Integration], [cdp_Developer]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Application Entities
-- Item: Permissions for vwApplicationEntities
-- Generated: 3/12/2024, 11:32:39 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwApplicationEntities] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Applications
-- Item: Permissions for vwApplications
-- Generated: 3/12/2024, 11:32:39 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwApplications] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Audit Logs
-- Item: Permissions for vwAuditLogs
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwAuditLogs] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Audit Log Types
-- Item: Permissions for vwAuditLogTypes
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwAuditLogTypes] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Authorization Roles
-- Item: Permissions for vwAuthorizationRoles
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwAuthorizationRoles] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Authorizations
-- Item: Permissions for vwAuthorizations
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwAuthorizations] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Companies
-- Item: Permissions for vwCompanies
-- Generated: 3/12/2024, 11:32:36 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwCompanies] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Record Maps
-- Item: Permissions for vwCompanyIntegrationRecordMaps
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwCompanyIntegrationRecordMaps] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Run API Logs
-- Item: Permissions for vwCompanyIntegrationRunAPILogs
-- Generated: 3/12/2024, 11:32:39 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwCompanyIntegrationRunAPILogs] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Run Details
-- Item: Permissions for vwCompanyIntegrationRunDetails
-- Generated: 3/12/2024, 11:32:38 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwCompanyIntegrationRunDetails] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integration Runs
-- Item: Permissions for vwCompanyIntegrationRuns
-- Generated: 3/12/2024, 11:32:38 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwCompanyIntegrationRuns] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Company Integrations
-- Item: Permissions for vwCompanyIntegrations
-- Generated: 3/12/2024, 11:32:37 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwCompanyIntegrations] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Conversation Details
-- Item: Permissions for vwConversationDetails
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwConversationDetails] TO [cdp_UI], [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Conversations
-- Item: Permissions for vwConversations
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwConversations] TO [cdp_UI], [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dashboard Categories
-- Item: Permissions for vwDashboardCategories
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwDashboardCategories] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dashboards
-- Item: Permissions for vwDashboards
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwDashboards] TO [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Data Context Items
-- Item: Permissions for vwDataContextItems
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwDataContextItems] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Data Contexts
-- Item: Permissions for vwDataContexts
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwDataContexts] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Dataset Items
-- Item: Permissions for vwDatasetItems
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwDatasetItems] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Datasets
-- Item: Permissions for vwDatasets
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwDatasets] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employee Company Integrations
-- Item: Permissions for vwEmployeeCompanyIntegrations
-- Generated: 3/12/2024, 11:32:36 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEmployeeCompanyIntegrations] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employee Roles
-- Item: Permissions for vwEmployeeRoles
-- Generated: 3/12/2024, 11:32:36 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEmployeeRoles] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employees
-- Item: Permissions for vwEmployees
-- Generated: 3/12/2024, 11:32:36 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEmployees] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Employee Skills
-- Item: Permissions for vwEmployeeSkills
-- Generated: 3/12/2024, 11:32:37 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEmployeeSkills] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entities
-- Item: Permissions for vwEntities
-- Generated: 3/12/2024, 11:32:37 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEntities] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity AI Actions
-- Item: Permissions for vwEntityAIActions
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEntityAIActions] TO [cdp_UI], [cdp_Integration], [cdp_Developer]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Document Runs
-- Item: Permissions for vwEntityDocumentRuns
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEntityDocumentRuns] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Documents
-- Item: Permissions for vwEntityDocuments
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEntityDocuments] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Document Types
-- Item: Permissions for vwEntityDocumentTypes
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEntityDocumentTypes] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Fields
-- Item: Permissions for vwEntityFields
-- Generated: 3/12/2024, 11:32:37 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEntityFields] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Field Values
-- Item: Permissions for vwEntityFieldValues
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEntityFieldValues] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Permissions
-- Item: Permissions for vwEntityPermissions
-- Generated: 3/12/2024, 11:32:39 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEntityPermissions] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Record Documents
-- Item: Permissions for vwEntityRecordDocuments
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEntityRecordDocuments] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Entity Relationships
-- Item: Permissions for vwEntityRelationships
-- Generated: 3/12/2024, 11:32:38 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwEntityRelationships] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Error Logs
-- Item: Permissions for vwErrorLogs
-- Generated: 3/12/2024, 11:32:38 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwErrorLogs] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Integrations
-- Item: Permissions for vwIntegrations
-- Generated: 3/12/2024, 11:32:37 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwIntegrations] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Integration URL Formats
-- Item: Permissions for vwIntegrationURLFormats
-- Generated: 3/12/2024, 11:32:37 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwIntegrationURLFormats] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: List Details
-- Item: Permissions for vwListDetails
-- Generated: 3/12/2024, 11:32:40 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwListDetails] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Lists
-- Item: Permissions for vwLists
-- Generated: 3/12/2024, 11:32:39 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwLists] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Output Delivery Types
-- Item: Permissions for vwOutputDeliveryTypes
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwOutputDeliveryTypes] TO [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Output Format Types
-- Item: Permissions for vwOutputFormatTypes
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwOutputFormatTypes] TO [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Output Trigger Types
-- Item: Permissions for vwOutputTriggerTypes
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwOutputTriggerTypes] TO [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queries
-- Item: Permissions for vwQueries
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwQueries] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Categories
-- Item: Permissions for vwQueryCategories
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwQueryCategories] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Fields
-- Item: Permissions for vwQueryFields
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwQueryFields] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Query Permissions
-- Item: Permissions for vwQueryPermissions
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwQueryPermissions] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queues
-- Item: Permissions for vwQueues
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwQueues] TO [cdp_Developer], [cdp_Developer], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queue Tasks
-- Item: Permissions for vwQueueTasks
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwQueueTasks] TO [cdp_Developer], [cdp_Developer], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Queue Types
-- Item: Permissions for vwQueueTypes
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwQueueTypes] TO [cdp_Developer]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Record Changes
-- Item: Permissions for vwRecordChanges
-- Generated: 3/12/2024, 11:32:40 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwRecordChanges] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Record Merge Deletion Logs
-- Item: Permissions for vwRecordMergeDeletionLogs
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwRecordMergeDeletionLogs] TO [cdp_UI], [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Record Merge Logs
-- Item: Permissions for vwRecordMergeLogs
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwRecordMergeLogs] TO [cdp_UI], [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Report Categories
-- Item: Permissions for vwReportCategories
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwReportCategories] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Reports
-- Item: Permissions for vwReports
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwReports] TO [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Report Snapshots
-- Item: Permissions for vwReportSnapshots
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwReportSnapshots] TO [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Resource Types
-- Item: Permissions for vwResourceTypes
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwResourceTypes] TO [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Roles
-- Item: Permissions for vwRoles
-- Generated: 3/12/2024, 11:32:37 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwRoles] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Row Level Security Filters
-- Item: Permissions for vwRowLevelSecurityFilters
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwRowLevelSecurityFilters] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Schema Info
-- Item: Permissions for vwSchemaInfos
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------



-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Skills
-- Item: Permissions for vwSkills
-- Generated: 3/12/2024, 11:32:37 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwSkills] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Tagged Items
-- Item: Permissions for vwTaggedItems
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwTaggedItems] TO [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Tags
-- Item: Permissions for vwTags
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwTags] TO [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Application Entities
-- Item: Permissions for vwUserApplicationEntities
-- Generated: 3/12/2024, 11:32:39 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUserApplicationEntities] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Applications
-- Item: Permissions for vwUserApplications
-- Generated: 3/12/2024, 11:32:39 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUserApplications] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Favorites
-- Item: Permissions for vwUserFavorites
-- Generated: 3/12/2024, 11:32:36 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUserFavorites] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Notifications
-- Item: Permissions for vwUserNotifications
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUserNotifications] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Record Logs
-- Item: Permissions for vwUserRecordLogs
-- Generated: 3/12/2024, 11:32:38 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUserRecordLogs] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Roles
-- Item: Permissions for vwUserRoles
-- Generated: 3/12/2024, 11:32:40 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUserRoles] TO [cdp_UI], [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Users
-- Item: Permissions for vwUsers
-- Generated: 3/12/2024, 11:32:38 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUsers] TO [cdp_Developer], [cdp_Integration], [cdp_UI], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Categories
-- Item: Permissions for vwUserViewCategories
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUserViewCategories] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Run Details
-- Item: Permissions for vwUserViewRunDetails
-- Generated: 3/12/2024, 11:32:40 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUserViewRunDetails] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User View Runs
-- Item: Permissions for vwUserViewRuns
-- Generated: 3/12/2024, 11:32:40 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUserViewRuns] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: User Views
-- Item: Permissions for vwUserViews
-- Generated: 3/12/2024, 11:32:38 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwUserViews] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Vector Databases
-- Item: Permissions for vwVectorDatabases
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwVectorDatabases] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Vector Indexes
-- Item: Permissions for vwVectorIndexes
-- Generated: 3/12/2024, 11:32:42 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwVectorIndexes] TO [cdp_UI], [cdp_Developer], [cdp_Integration]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workflow Engines
-- Item: Permissions for vwWorkflowEngines
-- Generated: 3/12/2024, 11:32:40 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwWorkflowEngines] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workflow Runs
-- Item: Permissions for vwWorkflowRuns
-- Generated: 3/12/2024, 11:32:40 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwWorkflowRuns] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workflows
-- Item: Permissions for vwWorkflows
-- Generated: 3/12/2024, 11:32:40 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwWorkflows] TO [cdp_Developer], [cdp_Integration], [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workspace Items
-- Item: Permissions for vwWorkspaceItems
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwWorkspaceItems] TO [cdp_UI]


-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Workspaces
-- Item: Permissions for vwWorkspaces
-- Generated: 3/12/2024, 11:32:41 PM
--
-- This was generated by the Entity Generator.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

GRANT SELECT ON [__mj].[vwWorkspaces] TO [cdp_UI]


